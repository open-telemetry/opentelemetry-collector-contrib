name: golden
on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    paths-ignore:
      - "**/README.md"
  merge_group:
  pull_request:
    paths-ignore:
      - "**/README.md"
env:
  # Make sure to exit early if cache segment download times out after 2 minutes.
  # We limit cache download as a whole to 5 minutes.
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2

# Do not cancel this workflow on main. See https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/16616
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-dev:
    runs-on: ubuntu-24.04
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      - name: Install dependencies
        if: steps.go-setup.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Build binaries
        run: |
          GOOS=linux GOARCH=ppc64le make golden
          GOOS=linux GOARCH=arm64 make golden
          GOOS=linux GOARCH=amd64 make golden
          GOOS=linux GOARCH=s390x make golden
          cp bin/golden_* cmd/golden/
      - name: Build golden
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: cmd/golden
          push: false
          tags: ghcr.io/open-telemetry/opentelemetry-collector-contrib/golden:dev
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le

  publish-latest:
    runs-on: ubuntu-24.04
    if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && github.repository == 'open-telemetry/opentelemetry-collector-contrib'
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      - name: Install dependencies
        if: steps.go-setup.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build binaries
        run: |
          GOOS=linux GOARCH=ppc64le make golden
          GOOS=linux GOARCH=arm64 make golden
          GOOS=linux GOARCH=amd64 make golden
          GOOS=linux GOARCH=s390x make golden
          cp bin/golden_* cmd/golden/
      - name: Push golden to Github packages
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: cmd/golden
          push: true
          tags: ghcr.io/open-telemetry/opentelemetry-collector-contrib/golden:latest
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le

  publish-stable:
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v') && github.repository == 'open-telemetry/opentelemetry-collector-contrib'
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      - name: Install dependencies
        if: steps.go-setup.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name: Set Release Tag
        id: github_tag
        run: ./.github/workflows/scripts/set_release_tag.sh
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build binaries
        run: |
          GOOS=linux GOARCH=ppc64le make golden
          GOOS=linux GOARCH=arm64 make golden
          GOOS=linux GOARCH=amd64 make golden
          GOOS=linux GOARCH=s390x make golden
          cp bin/golden_* cmd/golden/
      - name: Push golden to Github packages
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: cmd/golden
          push: true
          tags: ghcr.io/open-telemetry/opentelemetry-collector-contrib/golden:${{ steps.github_tag.outputs.tag }}
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
