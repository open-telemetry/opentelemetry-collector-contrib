name: build-and-test-arm
on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  merge_group:
  pull_request:
env:
  TEST_RESULTS: testbed/tests/results/junit/results.xml
  # Make sure to exit early if cache segment download times out after 2 minutes.
  # We limit cache download as a whole to 5 minutes.
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2

permissions: read-all

# Do not cancel this workflow on main. See https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/16616
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  setup-environment:
    runs-on: ubuntu-22.04-arm
    if: ${{ github.actor != 'dependabot[bot]' && (!contains(github.event.pull_request.labels.*.name, 'Skip ARM') || github.event_name == 'push' || github.event_name == 'merge_group') }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      - name: Install dependencies
        if: steps.go-setup.outputs.cache-hit != 'true'
        run: make -j2 gomoddownload
      - name: Install Tools
        if: steps.go-setup.outputs.cache-hit != 'true'
        run: make install-tools
  arm-unittest-matrix:
    needs: [setup-environment]
    if: ${{ github.actor != 'dependabot[bot]' && (!contains(github.event.pull_request.labels.*.name, 'Skip ARM') || github.event_name == 'push' || github.event_name == 'merge_group') }}
    strategy:
      fail-fast: false
      matrix:
        group:
          - receiver-0
          - receiver-1
          - receiver-2
          - receiver-3
          - processor-0
          - processor-1
          - exporter-0
          - exporter-1
          - exporter-2
          - exporter-3
          - extension
          - connector
          - internal
          - pkg
          - cmd-0
          - other
    timeout-minutes: 30
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      # Unit tests without JUnit output are much faster, so it's fine to run on every PR.
      # The only time we don't run them is when we already ran them with JUnit output.
      - name: Run Unit Tests
        id: tests
        if: github.ref != 'refs/heads/main'
        run: make -j2 gotest GROUP=${{ matrix.group }}

      # JUnit tests are super long, so we only run them on pushes to the main branch.
      # This is used for automation that automatically creates issues for flaky tests that are
      # merged to main, so we don't run them on every PR.
      - name: Run Unit Tests With JUnit and Coverage
        id: tests-with-junit
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        continue-on-error: true # Allow uploading artifacts even if the test fails
        run: make gotest-with-junit-and-cover GROUP=${{ matrix.group }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          name: test-results-arm-${{ matrix.group }}
          path: internal/tools/testresults/
          retention-days: 4
      - name: Fail workflow if tests fails
        if: always()
        run: |
          if [[ "${{ steps.tests-with-junit.outcome }}" == "failure" || "${{ steps.tests.outcome }}" == "failure" ]]; then
            echo "Tests failed. Failing workflow."
            exit 1
          else
            echo "Tests passed or were skipped. Continuing."
          fi
  arm-unittest:
    if: ${{ github.actor != 'dependabot[bot]' && (!contains(github.event.pull_request.labels.*.name, 'Skip ARM') || github.event_name == 'push' || github.event_name == 'merge_group') }}
    runs-on: ubuntu-24.04
    needs: [arm-unittest-matrix]
    steps:
      - name: Print result
        run: echo ${{ needs.arm-unittest-matrix.result }}
      - name: Interpret result
        run: |
          if [[ success == ${{ needs.arm-unittest-matrix.result }} ]]
          then
            echo "All matrix jobs passed!"
          else
            echo "One or more matrix jobs failed."
            false
          fi
  flakytests-generate-issues:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    needs: [arm-unittest-matrix]
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        id: go-setup
        with:
          go-version: oldstable
          cache-dependency-path: "**/*.sum"
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          merge-multiple: true
          pattern: test-results-arm-*
          path: ./internal/tools/testresults/
      - name: Generate Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make install-tools
          ./.tools/issuegenerator -path ./internal/tools/testresults/
