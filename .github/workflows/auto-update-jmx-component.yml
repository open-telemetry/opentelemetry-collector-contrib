name: Auto-update JMX metrics component

on:
  schedule:
    # Daily at 01:30 (UTC)
    - cron: '30 1 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-jmx-metrics-version:
    if: github.repository == 'open-telemetry/opentelemetry-collector-contrib'
    runs-on: ubuntu-24.04
    outputs:
      latest-version: ${{ steps.check-jmx-metrics-version.outputs.latest-version }}
      already-added: ${{ steps.check-jmx-metrics-version.outputs.already-added }}
      already-opened: ${{ steps.check-jmx-metrics-version.outputs.already-opened }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - id: check-jmx-metrics-version
        name: Check versions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_version=$(gh release view \
                               --repo open-telemetry/opentelemetry-java-contrib \
                               --json tagName \
                               --jq .tagName \
                             | sed 's/^v//')

          # jmx metric gatherer is currently alpha
          latest_version="$latest_version"-alpha

          if grep -Pzo "version: \"$latest_version\",\s*jar:\s*\"JMX metrics gatherer\"" receiver/jmxreceiver/supported_jars.go; then
            already_added=true
          fi

          matches=$(gh pr list \
                        --author opentelemetrybot \
                        --state open \
                        --search "in:title \"Add JMX metrics gatherer version $latest_version\"")
          if [ -n "$matches" ]
          then
            already_opened=true
          fi

          echo "latest-version=$latest_version"; echo "already-added=$already_added"; echo "already-opened=$already_opened" >> "$GITHUB_OUTPUT"

  update-jmx-metrics-component:
    permissions:
      contents: write # required for pushing changes
    runs-on: ubuntu-24.04
    if: |
      github.repository == 'open-telemetry/opentelemetry-collector-contrib' &&
      needs.check-jmx-metrics-version.outputs.already-added != 'true' &&
      needs.check-jmx-metrics-version.outputs.already-opened != 'true'
    needs:
      - check-jmx-metrics-version
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Update version
        env:
          VERSION: ${{ needs.check-jmx-metrics-version.outputs.latest-version }}
        run: |
          if [[ ! "$VERSION" =~ -alpha$ ]]; then
            echo currently expecting jmx metrics version to end with "-alpha"
            exit 1
          fi

          hash=$(curl -L "https://github.com/open-telemetry/opentelemetry-java-contrib/releases/download/v${VERSION//-alpha/}/opentelemetry-jmx-metrics.jar" \
                         | sha256sum \
                         | cut -d ' ' -f 1)

          # NOTE there are intentional tab characters in the line below
          sed -i "/^var jmxMetricsGathererVersions/a \	\"$hash\": {\n		version: \"$VERSION\",\n		jar:     \"JMX metrics gatherer\",\n	}," receiver/jmxreceiver/supported_jars.go
          git diff

      - name: Use CLA approved github bot
        run: |
          git config user.name otelbot
          git config user.email 197425009+otelbot@users.noreply.github.com

      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: otelbot-token
        with:
          app-id: ${{ vars.OTELBOT_APP_ID }}
          private-key: ${{ secrets.OTELBOT_PRIVATE_KEY }}

      - name: Create pull request against main
        env:
          VERSION: ${{ needs.check-jmx-metrics-version.outputs.latest-version }}
          # not using secrets.GITHUB_TOKEN since pull requests from that token do not run workflows
          GH_TOKEN: ${{ steps.otelbot-token.outputs.token }}
        run: |
          message="Add JMX metrics gatherer version $VERSION"
          body="Add JMX metrics gatherer version \`$VERSION\`.

          cc @open-telemetry/java-contrib-approvers
          "
          branch="otelbot/add-jmx-metrics-gatherer-${VERSION}"

          git checkout -b "$branch"
          git commit -a -m "$message"
          git push --set-upstream origin "$branch"
          url=$(gh pr create --title "$message" \
                             --body "$body" \
                             --base main)

          pull_request_number=${url//*\//}

          # see the template for change log entry file at blob/main/.chloggen/TEMPLATE.yaml
          cat > ".chloggen/add-jmx-metrics-gatherer-$VERSION.yaml" << EOF
          change_type: enhancement
          component: jmxreceiver
          note: Add the JMX metrics gatherer version "$VERSION" to the supported jars hash list
          issues: [ $pull_request_number ]
          EOF

          git add ".chloggen/add-jmx-metrics-gatherer-$VERSION.yaml"

          git commit -m "Add change log entry"
          git push

  check-jmx-scraper-version:
    runs-on: ubuntu-24.04
    if: github.repository == 'open-telemetry/opentelemetry-collector-contrib'
    outputs:
      latest-version: ${{ steps.check-jmx-scraper-version.outputs.latest-version }}
      already-added: ${{ steps.check-jmx-scraper-version.outputs.already-added }}
      already-opened: ${{ steps.check-jmx-scraper-version.outputs.already-opened }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - id: check-jmx-scraper-version
        name: Check versions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_version=$(gh release view \
                               --repo open-telemetry/opentelemetry-java-contrib \
                               --json tagName \
                               --jq .tagName \
                             | sed 's/^v//')

          # jmx scraper is currently alpha
          latest_version="$latest_version"-alpha

          if grep -Pzo "version: \"$latest_version\",\s*jar:\s*\"JMX scraper\"" receiver/jmxreceiver/supported_jars.go; then
            already_added=true
          fi

          matches=$(gh pr list \
                        --author opentelemetrybot \
                        --state open \
                        --search "in:title \"Add JMX scraper version $latest_version\"")
          if [ -n "$matches" ]
          then
            already_opened=true
          fi

          echo "latest-version=$latest_version"; echo "already-added=$already_added"; echo "already-opened=$already_opened" >> "$GITHUB_OUTPUT"

  update-jmx-scraper-component:
    permissions:
      contents: write # required for pushing changes
    runs-on: ubuntu-24.04
    if: |
      github.repository == 'open-telemetry/opentelemetry-collector-contrib' &&
      needs.check-jmx-scraper-version.outputs.already-added != 'true' &&
      needs.check-jmx-scraper-version.outputs.already-opened != 'true'
    needs:
      - check-jmx-scraper-version
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Update version
        env:
          VERSION: ${{ needs.check-jmx-scraper-version.outputs.latest-version }}
        run: |
          if [[ ! "$VERSION" =~ -alpha$ ]]; then
            echo currently expecting jmx scraper version to end with "-alpha"
            exit 1
          fi

          hash=$(curl -L "https://repo1.maven.org/maven2/io/opentelemetry/contrib/opentelemetry-jmx-scraper/${VERSION//-alpha/}/opentelemetry-jmx-scraper-$VERSION.jar" \
                         | sha256sum \
                         | cut -d ' ' -f 1)


          # NOTE there are intentional tab characters in the line below
          sed -i "/^var jmxScraperVersions/a \	\"$hash\": {\n		version: \"$VERSION\",\n		jar:     \"JMX scraper\",\n	}," receiver/jmxreceiver/supported_jars.go
          git diff

      - name: Use CLA approved github bot
        run: |
          git config user.name otelbot
          git config user.email 197425009+otelbot@users.noreply.github.com

      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: otelbot-token
        with:
          app-id: ${{ vars.OTELBOT_APP_ID }}
          private-key: ${{ secrets.OTELBOT_PRIVATE_KEY }}

      - name: Create pull request against main
        env:
          VERSION: ${{ needs.check-jmx-scraper-version.outputs.latest-version }}
          # not using secrets.GITHUB_TOKEN since pull requests from that token do not run workflows
          GH_TOKEN: ${{ steps.otelbot-token.outputs.token }}
        run: |
          message="Add JMX scraper version $VERSION"
          body="Add JMX scraper version \`$VERSION\`.

          cc @open-telemetry/java-contrib-approvers
          "
          branch="otelbot/add-jmx-scraper-${VERSION}"

          git checkout -b "$branch"
          git commit -a -m "$message"
          git push --set-upstream origin "$branch"
          url=$(gh pr create --title "$message" \
                             --body "$body" \
                             --base main)

          pull_request_number="${url//*\//}"

          # see the template for change log entry file at blob/main/.chloggen/TEMPLATE.yaml
          cat > ".chloggen/add-jmx-scraper-$VERSION.yaml" << EOF
          change_type: enhancement
          component: jmxreceiver
          note: Add the JMX scraper version "$VERSION" to the supported jars hash list
          issues: [ "$pull_request_number" ]
          EOF

          git add ".chloggen/add-jmx-scraper-$VERSION.yaml"

          git commit -m "Add change log entry"
          git push
