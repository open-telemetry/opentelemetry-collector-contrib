name: 'Update contrib to the latest core source'
on:
  workflow_dispatch:
  schedule:
    - cron: "27 8 * * 5" # Run at 08:27 UTC on Fridays.

jobs:
  update-otel:
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'open-telemetry' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          path: opentelemetry-collector-contrib
      - name: Pull the latest collector repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          path: opentelemetry-collector
          repository: open-telemetry/opentelemetry-collector
      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: otelbot-token
        with:
          app-id: ${{ vars.OTELBOT_APP_ID }}
          private-key: ${{ secrets.OTELBOT_PRIVATE_KEY }}
      - name: Prepare to update dependencies
        run: |
          exec > >(tee log.out) 2>&1
          LAST_COMMIT=$(git -C ./opentelemetry-collector/ rev-parse HEAD)
          cd opentelemetry-collector-contrib
          git config user.name otelbot
          git config user.email 197425009+otelbot@users.noreply.github.com
          branch="otelbot/update-otel-$(date +%s)"
          git checkout -b $branch
          make genotelcontribcol
          echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_ENV
          echo "BRANCH_NAME=$branch" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
          
      - name: Gets packages from links with retries
        uses: nick-fields/retry@v3
        with:  
          retry_wait_seconds: 5
          timeout_minutes: 15
          max_attempts: 3
          retry_on: error 
          command: |
            cd opentelemetry-collector-contrib
            make update-otel OTEL_STABLE_VERSION=${{ env.LAST_COMMIT }} OTEL_VERSION=${{ env.LAST_COMMIT }}
       
      - name: Push and create PR
        run: |  
          cd opentelemetry-collector-contrib
          git push --set-upstream origin ${{ env.BRANCH_NAME }}
          gh pr create --base main --title "[chore] Update core dependencies" --body "This PR updates the opentelemetry-collector dependency to the latest release"
        env:
          GITHUB_TOKEN: ${{ steps.otelbot-token.outputs.token }}
      - name: File an issue if the workflow failed
        if: failure()
        run: |
          template=$(cat <<'END'
          [Link to job log](%s)
          
          <details>
          <summary>Last 100 lines of log</summary>

          ```
          %s
          ```
          </details>
          END
          )
          job_url="$(gh run view ${{ github.run_id }} -R ${{ github.repository }} --json jobs -q '.jobs[] | select(.name == "update-otel") | .url')"
          body="$(printf "$template" "$job_url" "$(tail -n100 log.out | tail -c63K)")"
          gh issue create -R ${{ github.repository }} -t 'update-otel workflow failed' -b "$body" -l 'ci-cd'
        env:
          GH_TOKEN: ${{ github.token }}