  count:
  count/custom_description:
    spans:
      trace.span.count:
        description: My description for default span count metric.
    spanevents:
      trace.span.event.count:
        description: My description for default span event count metric.
    metrics:
      metric.count:
        description: My description for default metric count metric.
    datapoints:
      metric.datapoint.count:
        description: My description for default datapoint count metric.
    logs:
      log.record.count:
        description: My description for default log count metric.
    profiles:
      profile.count:
        description: My description for default profile count metric.
  count/custom_metric:
    spans:
      my.span.count:
        description: My span count.
    spanevents:
      my.spanevent.count:
        description: My span event count.
    metrics:
      my.metric.count:
        description: My metric count.
    datapoints:
      my.datapoint.count:
        description: My data point count.
    logs:
      my.logrecord.count:
        description: My log record count.
    profiles:
      my.profiling.count:
        description: My profile count.
  count/condition:
    spans:
      my.span.count:
        description: My span count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-s")
    spanevents:
      my.spanevent.count:
        description: My span event count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-e")
    metrics:
      my.metric.count:
        description: My metric count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-m")
    datapoints:
      my.datapoint.count:
        description: My data point count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-d")
    logs:
      my.logrecord.count:
        description: My log record count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
    profiles:
      my.profiling.count:
        description: My profile count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
  count/multiple_condition:
    spans:
      my.span.count:
        description: My span count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-s")
          - IsMatch(resource.attributes["foo"], "bar-s")
    spanevents:
      my.spanevent.count:
        description: My span event count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-e")
          - IsMatch(resource.attributes["foo"], "bar-e")
    metrics:
      my.metric.count:
        description: My metric count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-m")
          - IsMatch(resource.attributes["foo"], "bar-m")
    datapoints:
      my.datapoint.count:
        description: My data point count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-d")
          - IsMatch(resource.attributes["foo"], "bar-d")
    logs:
      my.logrecord.count:
        description: My log record count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
          - IsMatch(resource.attributes["foo"], "bar-l")
    profiles:
      my.profiling.count:
        description: My profile count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
          - IsMatch(resource.attributes["foo"], "bar-l")
  count/attribute:
    spans:
      my.span.count:
        description: My span count by environment.
        attributes:
          - key: env
    spanevents:
      my.spanevent.count:
        description: My span event count by environment.
        attributes:
          - key: env
    metrics:
      my.metric.count:
        description: My metric count.
        # Metrics do not have attributes.
    datapoints:
      my.datapoint.count:
        description: My data point count by environment.
        attributes:
          - key: env
    logs:
      my.logrecord.count:
        description: My log record count by environment.
        attributes:
          - key: env
    profiles:
      my.profiling.count:
        description: My profile count by environment.
        attributes:
          - key: env
  count/multiple_metrics:
    spans:
      my.span.count:
        description: My span count.
      limited.span.count:
        description: Limited span count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-s")
        attributes:
          - key: env
          - key: component
            default_value: other
    spanevents:
      my.spanevent.count:
        description: My span event count.
      limited.spanevent.count:
        description: Limited span event count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-e")
        attributes:
          - key: env
          - key: component
            default_value: other
    metrics:
      my.metric.count:
        description: My metric count.
      limited.metric.count:
        description: Limited metric count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-m")
    datapoints:
      my.datapoint.count:
        description: My data point count.
      limited.datapoint.count:
        description: Limited data point count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-d")
        attributes:
          - key: env
          - key: component
            default_value: other
    logs:
      my.logrecord.count:
        description: My log record count.
      limited.logrecord.count:
        description: Limited log record count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
        attributes:
          - key: env
          - key: component
            default_value: other
    profiles:
      my.profiling.count:
        description: My profile count.
      limited.profiling.count:
        description: Limited profile count.
        conditions:
          - IsMatch(resource.attributes["host.name"], "pod-l")
        attributes:
          - key: env
          - key: component
            default_value: other
  count/default_values:
    logs:
      my.logrecord.count:
        description: My log record count with default values.
      limited.logrecord.count:
        description: Limited log record count.
        attributes:
          - key: env
            default_value: "local"
          - key: http_code
            default_value: 200
          - key: request_success
            default_value: 0.85
