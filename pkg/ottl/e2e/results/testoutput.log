=== RUN   Test_e2e_editors
=== RUN   Test_e2e_editors/delete_key(attributes,_"http.method")
=== RUN   Test_e2e_editors/delete_matching_keys(attributes,_"^http")
=== RUN   Test_e2e_editors/keep_matching_keys(attributes,_"^http")
=== RUN   Test_e2e_editors/flatten(attributes)
=== RUN   Test_e2e_editors/flatten(attributes,_"test")
=== RUN   Test_e2e_editors/flatten(attributes,_"test",_resolveConflicts=true)
=== RUN   Test_e2e_editors/flatten(attributes,_depth=1)
=== RUN   Test_e2e_editors/keep_keys(attributes,_["flags",_"total.string"])
=== RUN   Test_e2e_editors/limit(attributes,_100,_[])
=== RUN   Test_e2e_editors/limit(attributes,_1,_["total.string"])
=== RUN   Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"insert")
=== RUN   Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"update")
=== RUN   Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"upsert")
=== RUN   Test_e2e_editors/merge_maps(attributes,_{"map_literal":_{"list":_[{"foo":"bar"},_"test"]}},_"upsert")
=== RUN   Test_e2e_editors/replace_all_matches(attributes,_"*/*",_"test")
=== RUN   Test_e2e_editors/replace_all_patterns(attributes,_"key",_"^http",_"test")
=== RUN   Test_e2e_editors/replace_all_patterns(attributes,_"value",_"/",_"@")
=== RUN   Test_e2e_editors/replace_match(attributes["http.path"],_"*/*",_"test")
=== RUN   Test_e2e_editors/replace_pattern(attributes["http.path"],_"/",_"@")
=== RUN   Test_e2e_editors/replace_pattern(attributes["http.path"],_"/",_"@",_SHA256)
=== RUN   Test_e2e_editors/set(attributes["test"],_"pass")
=== RUN   Test_e2e_editors/set(attributes["test"],_nil)
=== RUN   Test_e2e_editors/set(attributes["test"],_attributes["unknown"])
=== RUN   Test_e2e_editors/set(attributes["foo"]["test"],_"pass")
=== RUN   Test_e2e_editors/truncate_all(attributes,_100)
=== RUN   Test_e2e_editors/truncate_all(attributes,_1)
=== RUN   Test_e2e_editors/append(attributes["foo"]["slice"],_"sample_value")
=== RUN   Test_e2e_editors/append(attributes["foo"]["flags"],_"sample_value")
=== RUN   Test_e2e_editors/append(attributes["foo"]["slice"],_values=[5,6])
=== RUN   Test_e2e_editors/append(attributes["foo"]["new_slice"],_values=[5,6])
--- PASS: Test_e2e_editors (0.01s)
    --- PASS: Test_e2e_editors/delete_key(attributes,_"http.method") (0.00s)
    --- PASS: Test_e2e_editors/delete_matching_keys(attributes,_"^http") (0.00s)
    --- PASS: Test_e2e_editors/keep_matching_keys(attributes,_"^http") (0.00s)
    --- PASS: Test_e2e_editors/flatten(attributes) (0.00s)
    --- PASS: Test_e2e_editors/flatten(attributes,_"test") (0.00s)
    --- PASS: Test_e2e_editors/flatten(attributes,_"test",_resolveConflicts=true) (0.00s)
    --- PASS: Test_e2e_editors/flatten(attributes,_depth=1) (0.00s)
    --- PASS: Test_e2e_editors/keep_keys(attributes,_["flags",_"total.string"]) (0.00s)
    --- PASS: Test_e2e_editors/limit(attributes,_100,_[]) (0.00s)
    --- PASS: Test_e2e_editors/limit(attributes,_1,_["total.string"]) (0.00s)
    --- PASS: Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"insert") (0.00s)
    --- PASS: Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"update") (0.00s)
    --- PASS: Test_e2e_editors/merge_maps(attributes,_attributes["foo"],_"upsert") (0.00s)
    --- PASS: Test_e2e_editors/merge_maps(attributes,_{"map_literal":_{"list":_[{"foo":"bar"},_"test"]}},_"upsert") (0.00s)
    --- PASS: Test_e2e_editors/replace_all_matches(attributes,_"*/*",_"test") (0.00s)
    --- PASS: Test_e2e_editors/replace_all_patterns(attributes,_"key",_"^http",_"test") (0.00s)
    --- PASS: Test_e2e_editors/replace_all_patterns(attributes,_"value",_"/",_"@") (0.00s)
    --- PASS: Test_e2e_editors/replace_match(attributes["http.path"],_"*/*",_"test") (0.00s)
    --- PASS: Test_e2e_editors/replace_pattern(attributes["http.path"],_"/",_"@") (0.00s)
    --- PASS: Test_e2e_editors/replace_pattern(attributes["http.path"],_"/",_"@",_SHA256) (0.00s)
    --- PASS: Test_e2e_editors/set(attributes["test"],_"pass") (0.00s)
    --- PASS: Test_e2e_editors/set(attributes["test"],_nil) (0.00s)
    --- PASS: Test_e2e_editors/set(attributes["test"],_attributes["unknown"]) (0.00s)
    --- PASS: Test_e2e_editors/set(attributes["foo"]["test"],_"pass") (0.00s)
    --- PASS: Test_e2e_editors/truncate_all(attributes,_100) (0.00s)
    --- PASS: Test_e2e_editors/truncate_all(attributes,_1) (0.00s)
    --- PASS: Test_e2e_editors/append(attributes["foo"]["slice"],_"sample_value") (0.00s)
    --- PASS: Test_e2e_editors/append(attributes["foo"]["flags"],_"sample_value") (0.00s)
    --- PASS: Test_e2e_editors/append(attributes["foo"]["slice"],_values=[5,6]) (0.00s)
    --- PASS: Test_e2e_editors/append(attributes["foo"]["new_slice"],_values=[5,6]) (0.00s)
=== RUN   Test_e2e_converters
=== RUN   Test_e2e_converters/set(attributes["newOne"],_attributes[1])
=== RUN   Test_e2e_converters/set(attributes["array"][0.0],_"bar")
=== RUN   Test_e2e_converters/set(attributes["array"][ConvertCase(attributes["A|B|C"],_"upper")],_"bar")
=== RUN   Test_e2e_converters/set(attributes[ConvertCase(attributes["A|B|C"],_"upper")],_"myvalue")
=== RUN   Test_e2e_converters/set(attributes[ConvertCase(attributes[attributes["flags"]],_"upper")],_"myvalue")
=== RUN   Test_e2e_converters/set(attributes[attributes["flags"]],_"something33")
=== RUN   Test_e2e_converters/set(attributes[attributes[attributes["flags"]]],_"something2")
=== RUN   Test_e2e_converters/set(body,_attributes["things"][Len(attributes["things"])_-_1]["name"])
=== RUN   Test_e2e_converters/set(body,_attributes["things"][attributes["int_value"]_+_1]["name"])
=== RUN   Test_e2e_converters/set(body,_attributes[attributes["foo"][attributes["slice"]][attributes["int_value"]_+_1_-_1]])
=== RUN   Test_e2e_converters/set(body,_attributes[attributes["foo"][attributes["slice"]][attributes["int_value"]]])
=== RUN   Test_e2e_converters/set(resource.attributes[attributes["flags"]],_"something33")
=== RUN   Test_e2e_converters/set(resource.attributes[resource.attributes[attributes["flags"]]],_"something33")
=== RUN   Test_e2e_converters/set(attributes[resource.attributes[attributes["flags"]]],_"something33")
=== RUN   Test_e2e_converters/set(body,_attributes["array"])
=== RUN   Test_e2e_converters/set(attributes["array"][attributes["int_value"]],_3)
=== RUN   Test_e2e_converters/set(attributes["test"],_Base64Decode("cGFzcw=="))
=== RUN   Test_e2e_converters/set(attributes["test"],_Decode("cGFzcw==",_"base64"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Concat(["A","B"],_":"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ConvertCase(attributes["http.method"],_"upper"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ConvertCase("PASS",_"lower"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ConvertCase("fooBar",_"snake"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ConvertCase("foo_bar",_"camel"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToCamelCase("foo_bar"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToSnakeCase("fooBar"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToUpperCase(attributes["http.method"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToLowerCase("PASS"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ConvertAttributesToElementsXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>"))
=== RUN   Test_e2e_converters/set(body,_ConvertTextToElementsXML("<a><b/>foo</a>"))
=== RUN   Test_e2e_converters/set(body,_ConvertTextToElementsXML("<a><b/>foo</a><c><b/>bar</c>",_"/a",_"custom"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseInt("0xAF",_0))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseInt("12345",_10))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseInt("AF",_16))
=== RUN   Test_e2e_converters/set(attributes["test"],_Double(1.0))
=== RUN   Test_e2e_converters/set(attributes["test"],_Double("1"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Double(true))
=== RUN   Test_e2e_converters/set(attributes["test"],_Double(1))
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_Time("10",_"%M")_-_Time("01",_"%M")_<_Duration("10m")
=== RUN   Test_e2e_converters/set(attributes["test"],_ExtractPatterns("aa123bb",_"(?P<numbers>\\d+)"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ExtractGrokPatterns("http://user:password@example.com:80/path?query=string",_"%{ELB_URI}",_true))
=== RUN   Test_e2e_converters/set(attributes["test"],_FNV("pass"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Format("%03d-%s",_[7,_"test"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hour(Time("12",_"%H")))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hours(Duration("90m")))
=== RUN   Test_e2e_converters/set(attributes["test"],_InsertXML("<a></a>",_"/a",_"<b></b>"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Int(1.0))
=== RUN   Test_e2e_converters/set(attributes["test"],_Int("1"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Int(true))
=== RUN   Test_e2e_converters/set(attributes["test"],_Int(1))
=== RUN   Test_e2e_converters/set(attributes["test"],_GetXML("<a><b>1</b><c><b>2</b></c></a>",_"/a//b"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hex(1.0))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hex(true))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hex(12))
=== RUN   Test_e2e_converters/set(attributes["test"],_Hex("12"))
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsBool(false)
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsDouble(1.0)
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsMap(attributes["foo"])
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsList(attributes["foo"]["slice"])
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsMatch("aa123bb",_"\\d{3}")
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString("")
=== RUN   Test_e2e_converters/set(attributes["test"],_Len(attributes["foo"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_Log(1))
=== RUN   Test_e2e_converters/set(attributes["test"],_IsValidLuhn("17893729974"))
=== RUN   Test_e2e_converters/set(attributes["test"],_IsValidLuhn(17893729975))
=== RUN   Test_e2e_converters/set(attributes["test"],_MD5("pass"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Microseconds(Duration("1ms")))
=== RUN   Test_e2e_converters/set(attributes["test"],_Milliseconds(Duration("1s")))
=== RUN   Test_e2e_converters/set(attributes["test"],_Minutes(Duration("1h")))
=== RUN   Test_e2e_converters/set(attributes["test"],_Murmur3Hash128("Hello_World"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Murmur3Hash("Hello_World"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Nanoseconds(Duration("1ms")))
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_Now()_-_Now()_<_Duration("1h")
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseCSV("val1;val2;val3","header1|header2|header3",";","|","strict"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseCSV("val1,val2,val3","header1|header2|header3",headerDelimiter="|",mode="strict"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseJSON("{\"id\":1}"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseJSON("[\"value1\",\"value2\"]"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1=v1_k2=v2"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1!v1_k2!v2",_"!",_"_"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1!v1_k2!\"v2__!__v2\"",_"!",_"_"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2"),_"=",_"_",_true))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1:v1,k2:v2",_":"_,_","),_":",_",",_true))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2"),_"!",_"+",_true))
=== RUN   Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2=v3"),_"=",_"_",_true))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort(Values({"key1":_true,_"key2":_"value",_"key3":_1})))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseSimplifiedXML("<Log><id>1</id><Message>This_is_a_log_message!</Message></Log>"))
=== RUN   Test_e2e_converters/set(attributes["test"],_ParseXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>"))
=== RUN   Test_e2e_converters/set(attributes["test"],_RemoveXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>",_"/Log/Message"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Seconds(Duration("1m")))
=== RUN   Test_e2e_converters/set(attributes["test"],_SHA1("pass"))
=== RUN   Test_e2e_converters/set(attributes["test"],_SHA256("pass"))
=== RUN   Test_e2e_converters/set(attributes["test"],_SHA512("pass"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort(Split(attributes["flags"],_"|"),_"desc"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort([true,_false,_false]))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort([3,_6,_9],_"desc"))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort([Double(1.5),_Double(10.2),_Double(2.3),_Double(0.5)]))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort([Int(11),_Double(2.2),_Double(-1)]))
=== RUN   Test_e2e_converters/set(attributes["test"],_Sort([false,_Int(11),_Double(2.2),_"three"]))
=== RUN   Test_e2e_converters/set(span_id,_SpanID(0x0000000000000000))
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_String(ProfileID(0x00000000000000000000000000000001))_==_"[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]"
=== RUN   Test_e2e_converters/set(attributes["test"],_Split(attributes["flags"],_"|"))
=== RUN   Test_e2e_converters/set(attributes["test"],_String("test"))
=== RUN   Test_e2e_converters/set(attributes["test"],_String(attributes["http.method"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_String(span_id))
=== RUN   Test_e2e_converters/set(attributes["test"],_String([1,2,3]))
=== RUN   Test_e2e_converters/set(attributes["test"],_String(true))
=== RUN   Test_e2e_converters/set(attributes["test"],_Substring("pass",_0,_2))
=== RUN   Test_e2e_converters/set(trace_id,_TraceID(0x00000000000000000000000000000000))
=== RUN   Test_e2e_converters/set(time,_TruncateTime(time,_Duration("1s")))
=== RUN   Test_e2e_converters/set(attributes["time"],_FormatTime(time,_"%Y-%m-%d"))
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixMicro(time)_>_0
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixMilli(time)_>_0
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixNano(time)_>_0
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixSeconds(time)_>_0
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString(UUID())
=== RUN   Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString(UUIDv7())
=== RUN   Test_e2e_converters/set(attributes["test"],_"\\")
=== RUN   Test_e2e_converters/set(attributes["test"],_"\\\\")
=== RUN   Test_e2e_converters/set(attributes["test"],_"\\\\\\")
=== RUN   Test_e2e_converters/set(attributes["test"],_"\\\\\\\\")
=== RUN   Test_e2e_converters/set(attributes["test"],_"\"")
=== RUN   Test_e2e_converters/keep_keys(attributes["foo"],_["\\",_"bar"])
=== RUN   Test_e2e_converters/set(attributes["test"],_UserAgent("curl/7.81.0"))
=== RUN   Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"],_["name"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"],_["name"],_["value"]))
=== RUN   Test_e2e_converters/set(attributes["test"],_{"list":[{"foo":"bar"}]})
=== RUN   Test_e2e_converters/set(attributes,_{"list":[{"foo":"bar"}]})
=== RUN   Test_e2e_converters/set(attributes["arr"],_[{"list":[{"foo":"bar"}]},_{"bar":"baz"}])
=== RUN   Test_e2e_converters/set(attributes["test"],_IsList([{"list":[{"foo":"bar"}]},_{"bar":"baz"}]))
=== RUN   Test_e2e_converters/set(attributes["test"],_IsMap({"list":[{"foo":"bar"}]}))
=== RUN   Test_e2e_converters/set(attributes["test"],_Len([{"list":[{"foo":"bar"}]},_{"bar":"baz"}]))
=== RUN   Test_e2e_converters/set(attributes["list"],_Sort(Keys({"foo":_"bar",_"baz":_"foo"})))
=== RUN   Test_e2e_converters/set(attributes["indexof"],_Index("opentelemetry",_"telemetry"))
=== RUN   Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_"name"))
=== RUN   Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_"slice2"))
=== RUN   Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_attributes["slices"][2]))
--- PASS: Test_e2e_converters (0.10s)
    --- PASS: Test_e2e_converters/set(attributes["newOne"],_attributes[1]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["array"][0.0],_"bar") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["array"][ConvertCase(attributes["A|B|C"],_"upper")],_"bar") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes[ConvertCase(attributes["A|B|C"],_"upper")],_"myvalue") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes[ConvertCase(attributes[attributes["flags"]],_"upper")],_"myvalue") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes[attributes["flags"]],_"something33") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes[attributes[attributes["flags"]]],_"something2") (0.00s)
    --- PASS: Test_e2e_converters/set(body,_attributes["things"][Len(attributes["things"])_-_1]["name"]) (0.00s)
    --- PASS: Test_e2e_converters/set(body,_attributes["things"][attributes["int_value"]_+_1]["name"]) (0.00s)
    --- PASS: Test_e2e_converters/set(body,_attributes[attributes["foo"][attributes["slice"]][attributes["int_value"]_+_1_-_1]]) (0.00s)
    --- PASS: Test_e2e_converters/set(body,_attributes[attributes["foo"][attributes["slice"]][attributes["int_value"]]]) (0.00s)
    --- PASS: Test_e2e_converters/set(resource.attributes[attributes["flags"]],_"something33") (0.00s)
    --- PASS: Test_e2e_converters/set(resource.attributes[resource.attributes[attributes["flags"]]],_"something33") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes[resource.attributes[attributes["flags"]]],_"something33") (0.00s)
    --- PASS: Test_e2e_converters/set(body,_attributes["array"]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["array"][attributes["int_value"]],_3) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Base64Decode("cGFzcw==")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Decode("cGFzcw==",_"base64")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Concat(["A","B"],_":")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ConvertCase(attributes["http.method"],_"upper")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ConvertCase("PASS",_"lower")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ConvertCase("fooBar",_"snake")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ConvertCase("foo_bar",_"camel")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToCamelCase("foo_bar")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToSnakeCase("fooBar")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToUpperCase(attributes["http.method"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToLowerCase("PASS")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ConvertAttributesToElementsXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>")) (0.00s)
    --- PASS: Test_e2e_converters/set(body,_ConvertTextToElementsXML("<a><b/>foo</a>")) (0.00s)
    --- PASS: Test_e2e_converters/set(body,_ConvertTextToElementsXML("<a><b/>foo</a><c><b/>bar</c>",_"/a",_"custom")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseInt("0xAF",_0)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseInt("12345",_10)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseInt("AF",_16)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Double(1.0)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Double("1")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Double(true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Double(1)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_Time("10",_"%M")_-_Time("01",_"%M")_<_Duration("10m") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ExtractPatterns("aa123bb",_"(?P<numbers>\\d+)")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ExtractGrokPatterns("http://user:password@example.com:80/path?query=string",_"%{ELB_URI}",_true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_FNV("pass")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Format("%03d-%s",_[7,_"test"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hour(Time("12",_"%H"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hours(Duration("90m"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_InsertXML("<a></a>",_"/a",_"<b></b>")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Int(1.0)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Int("1")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Int(true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Int(1)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_GetXML("<a><b>1</b><c><b>2</b></c></a>",_"/a//b")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hex(1.0)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hex(true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hex(12)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Hex("12")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsBool(false) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsDouble(1.0) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsMap(attributes["foo"]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsList(attributes["foo"]["slice"]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsMatch("aa123bb",_"\\d{3}") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString("") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Len(attributes["foo"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Log(1)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_IsValidLuhn("17893729974")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_IsValidLuhn(17893729975)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_MD5("pass")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Microseconds(Duration("1ms"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Milliseconds(Duration("1s"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Minutes(Duration("1h"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Murmur3Hash128("Hello_World")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Murmur3Hash("Hello_World")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Nanoseconds(Duration("1ms"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_Now()_-_Now()_<_Duration("1h") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseCSV("val1;val2;val3","header1|header2|header3",";","|","strict")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseCSV("val1,val2,val3","header1|header2|header3",headerDelimiter="|",mode="strict")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseJSON("{\"id\":1}")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseJSON("[\"value1\",\"value2\"]")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1=v1_k2=v2")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1!v1_k2!v2",_"!",_"_")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseKeyValue("k1!v1_k2!\"v2__!__v2\"",_"!",_"_")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2"),_"=",_"_",_true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1:v1,k2:v2",_":"_,_","),_":",_",",_true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2"),_"!",_"+",_true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ToKeyValueString(ParseKeyValue("k1=v1_k2=v2=v3"),_"=",_"_",_true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort(Values({"key1":_true,_"key2":_"value",_"key3":_1}))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseSimplifiedXML("<Log><id>1</id><Message>This_is_a_log_message!</Message></Log>")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_ParseXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_RemoveXML("<Log_id=\"1\"><Message>This_is_a_log_message!</Message></Log>",_"/Log/Message")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Seconds(Duration("1m"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SHA1("pass")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SHA256("pass")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SHA512("pass")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort(Split(attributes["flags"],_"|"),_"desc")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort([true,_false,_false])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort([3,_6,_9],_"desc")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort([Double(1.5),_Double(10.2),_Double(2.3),_Double(0.5)])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort([Int(11),_Double(2.2),_Double(-1)])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Sort([false,_Int(11),_Double(2.2),_"three"])) (0.00s)
    --- PASS: Test_e2e_converters/set(span_id,_SpanID(0x0000000000000000)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_String(ProfileID(0x00000000000000000000000000000001))_==_"[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]" (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Split(attributes["flags"],_"|")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_String("test")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_String(attributes["http.method"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_String(span_id)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_String([1,2,3])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_String(true)) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Substring("pass",_0,_2)) (0.00s)
    --- PASS: Test_e2e_converters/set(trace_id,_TraceID(0x00000000000000000000000000000000)) (0.00s)
    --- PASS: Test_e2e_converters/set(time,_TruncateTime(time,_Duration("1s"))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["time"],_FormatTime(time,_"%Y-%m-%d")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixMicro(time)_>_0 (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixMilli(time)_>_0 (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixNano(time)_>_0 (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_UnixSeconds(time)_>_0 (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString(UUID()) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"pass")_where_IsString(UUIDv7()) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"\\") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"\\\\") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"\\\\\\") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"\\\\\\\\") (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_"\"") (0.00s)
    --- PASS: Test_e2e_converters/keep_keys(attributes["foo"],_["\\",_"bar"]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_UserAgent("curl/7.81.0")) (0.05s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"],_["name"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_SliceToMap(attributes["things"],_["name"],_["value"])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_{"list":[{"foo":"bar"}]}) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes,_{"list":[{"foo":"bar"}]}) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["arr"],_[{"list":[{"foo":"bar"}]},_{"bar":"baz"}]) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_IsList([{"list":[{"foo":"bar"}]},_{"bar":"baz"}])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_IsMap({"list":[{"foo":"bar"}]})) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["test"],_Len([{"list":[{"foo":"bar"}]},_{"bar":"baz"}])) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["list"],_Sort(Keys({"foo":_"bar",_"baz":_"foo"}))) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["indexof"],_Index("opentelemetry",_"telemetry")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_"name")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_"slice2")) (0.00s)
    --- PASS: Test_e2e_converters/set(attributes["indexof"],_Index(attributes["slices"],_attributes["slices"][2])) (0.00s)
=== RUN   Test_e2e_ottl_features
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_body_==_"operationB"
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_resource.attributes["host.name"]_==_"localhost"
=== RUN   Test_e2e_ottl_features/set(attributes["foo"],_"bar")_where_attributes[attributes["flags"]]_!=_nil
=== RUN   Test_e2e_ottl_features/set(severity_number,_SEVERITY_NUMBER_TRACE2)_where_severity_number_==_SEVERITY_NUMBER_TRACE
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_HasPrefix(body,_"operation")
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_HasSuffix(body,_"tionA")
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_trace_id_==_TraceID(0x0102030405060708090a0b0c0d0e0f10)
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_IsMatch(body,_"operation[AC]")
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_body_==_Concat(["operation",_"A"],_"")
=== RUN   Test_e2e_ottl_features/merge_maps(attributes,_ParseJSON("{\"json_test\":\"pass\"}"),_"insert")_where_body_==_"operationA"
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue(["hello",_"world"],_"hello")
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue([1,_2,_3,_4],_4)
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue([1.1,_2.2,_3.3,_4.4],_4.4)
=== RUN   Test_e2e_ottl_features/set(attributes["staging"],_"true")_where_ContainsValue(attributes["foo"]["slice"],_"val")
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_attributes["foo"]["bar"])
=== RUN   Test_e2e_ottl_features/set(attributes["test"],_attributes["metadata"]["uid"])
=== RUN   Test_e2e_ottl_features/set(body,_{"_raw":_body,_"test":_{"result":_attributes["foo"]["bar"],_"time":_UnixNano(time)}})
=== RUN   Test_e2e_ottl_features/set(attributes["isMap"],_IsMap({"foo":_{"bar":_"baz",_"test":_"pass"}}))
=== RUN   Test_e2e_ottl_features/set(attributes["my.environment.2"],_Split(resource.attributes["host.name"],"h")[1])
--- PASS: Test_e2e_ottl_features (0.01s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_body_==_"operationB" (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_resource.attributes["host.name"]_==_"localhost" (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["foo"],_"bar")_where_attributes[attributes["flags"]]_!=_nil (0.00s)
    --- PASS: Test_e2e_ottl_features/set(severity_number,_SEVERITY_NUMBER_TRACE2)_where_severity_number_==_SEVERITY_NUMBER_TRACE (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_HasPrefix(body,_"operation") (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_HasSuffix(body,_"tionA") (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_trace_id_==_TraceID(0x0102030405060708090a0b0c0d0e0f10) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_IsMatch(body,_"operation[AC]") (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_body_==_Concat(["operation",_"A"],_"") (0.00s)
    --- PASS: Test_e2e_ottl_features/merge_maps(attributes,_ParseJSON("{\"json_test\":\"pass\"}"),_"insert")_where_body_==_"operationA" (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue(["hello",_"world"],_"hello") (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue([1,_2,_3,_4],_4) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_"pass")_where_ContainsValue([1.1,_2.2,_3.3,_4.4],_4.4) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["staging"],_"true")_where_ContainsValue(attributes["foo"]["slice"],_"val") (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_attributes["foo"]["bar"]) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["test"],_attributes["metadata"]["uid"]) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(body,_{"_raw":_body,_"test":_{"result":_attributes["foo"]["bar"],_"time":_UnixNano(time)}}) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["isMap"],_IsMap({"foo":_{"bar":_"baz",_"test":_"pass"}})) (0.00s)
    --- PASS: Test_e2e_ottl_features/set(attributes["my.environment.2"],_Split(resource.attributes["host.name"],"h")[1]) (0.00s)
=== RUN   Test_e2e_ottl_statement_sequence
=== RUN   Test_e2e_ottl_statement_sequence/delete_key_of_map_literal
=== RUN   Test_e2e_ottl_statement_sequence/delete_matching_keys_of_map_literal
=== RUN   Test_e2e_ottl_statement_sequence/keep_matching_keys_of_map_literal
=== RUN   Test_e2e_ottl_statement_sequence/flatten_map_literal
--- PASS: Test_e2e_ottl_statement_sequence (0.00s)
    --- PASS: Test_e2e_ottl_statement_sequence/delete_key_of_map_literal (0.00s)
    --- PASS: Test_e2e_ottl_statement_sequence/delete_matching_keys_of_map_literal (0.00s)
    --- PASS: Test_e2e_ottl_statement_sequence/keep_matching_keys_of_map_literal (0.00s)
    --- PASS: Test_e2e_ottl_statement_sequence/flatten_map_literal (0.00s)
=== RUN   Test_e2e_ottl_value_expressions
=== RUN   Test_e2e_ottl_value_expressions/"foo"
=== RUN   Test_e2e_ottl_value_expressions/resource.attributes["host.name"]
=== RUN   Test_e2e_ottl_value_expressions/SEVERITY_NUMBER_TRACE
=== RUN   Test_e2e_ottl_value_expressions/TraceID(0x0102030405060708090a0b0c0d0e0f10)
=== RUN   Test_e2e_ottl_value_expressions/Len(attributes)_+_Len(attributes)
=== RUN   Test_e2e_ottl_value_expressions/Hex(Len(attributes)_+_Len(attributes))
=== RUN   Test_e2e_ottl_value_expressions/attributes["foo"]
=== RUN   Test_e2e_ottl_value_expressions/attributes["foo2"]
=== RUN   Test_e2e_ottl_value_expressions/attributes["foo3"]
=== RUN   Test_e2e_ottl_value_expressions/attributes["things"]
--- PASS: Test_e2e_ottl_value_expressions (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/"foo" (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/resource.attributes["host.name"] (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/SEVERITY_NUMBER_TRACE (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/TraceID(0x0102030405060708090a0b0c0d0e0f10) (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/Len(attributes)_+_Len(attributes) (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/Hex(Len(attributes)_+_Len(attributes)) (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/attributes["foo"] (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/attributes["foo2"] (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/attributes["foo3"] (0.00s)
    --- PASS: Test_e2e_ottl_value_expressions/attributes["things"] (0.00s)
=== RUN   Test_ProcessTraces_TraceContext
=== RUN   Test_ProcessTraces_TraceContext/set(attributes["entrypoint-root"],_name)_where_IsRootSpan()
--- PASS: Test_ProcessTraces_TraceContext (0.00s)
    --- PASS: Test_ProcessTraces_TraceContext/set(attributes["entrypoint-root"],_name)_where_IsRootSpan() (0.00s)
=== RUN   Test_ProcessSpanEvents
=== RUN   Test_ProcessSpanEvents/set(attributes["index"],_event_index)
--- PASS: Test_ProcessSpanEvents (0.00s)
    --- PASS: Test_ProcessSpanEvents/set(attributes["index"],_event_index) (0.00s)
PASS
ok  	github.com/open-telemetry/opentelemetry-collector-contrib/pkg/ottl/e2e	0.679s
