apiVersion: v1
kind: ConfigMap
metadata:
  name: otelcol-isolation-forest-config
  namespace: observability
  labels:
    app: otelcol-isolation-forest
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      
      k8s_cluster:
        auth_type: serviceAccount
        collection_interval: 10s
        node_conditions_to_report: [Ready, MemoryPressure, DiskPressure, PIDPressure]
        allocatable_types_to_report: [cpu, memory, storage]
      
      hostmetrics:
        collection_interval: 30s
        scrapers:
          cpu:
            metrics:
              system.cpu.utilization:
                enabled: true
          memory:
            metrics:
              system.memory.utilization:
                enabled: true
          disk:
          filesystem:
          network:
          load:

    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128
      
      isolationforest:
        num_trees: 100
        subsample_size: 256
        window_size: 1000
        anomaly_threshold: 0.7
        training_interval: 5m
        metrics_to_analyze:
          - "system.cpu.utilization"
          - "system.memory.utilization"
          - "k8s.node.cpu.usage"
          - "k8s.node.memory.usage"
          - "k8s.pod.cpu.usage"
          - "k8s.pod.memory.usage"
        features:
          - "k8s.node.name"
          - "k8s.namespace.name"
          - "k8s.pod.name"
        add_anomaly_score: true
        drop_anomalous_metrics: false
      
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: KUBE_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: connection
      
      resource:
        attributes:
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert
          - key: cluster.name
            value: "${CLUSTER_NAME}"
            action: insert
      
      batch:
        timeout: 1s
        send_batch_size: 1024
        send_batch_max_size: 2048

    exporters:
      debug:
        verbosity: basic
        sampling_initial: 10
        sampling_thereafter: 100
      
      otlp:
        endpoint: "${OTLP_ENDPOINT}"
        headers:
          authorization: "Bearer ${OTLP_TOKEN}"
        tls:
          insecure: false
      
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: otelcol
        const_labels:
          cluster: "${CLUSTER_NAME}"
      
      file:
        path: /tmp/otel-output.json
        rotation:
          max_megabytes: 10
          max_days: 7
          max_backups: 3

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      
      pprof:
        endpoint: 0.0.0.0:1777
      
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [health_check, pprof, zpages]
      
      pipelines:
        metrics:
          receivers: [otlp, k8s_cluster, hostmetrics]
          processors: [memory_limiter, k8sattributes, resource, isolationforest, batch]
          exporters: [debug, otlp, prometheus, file]
      
      telemetry:
        logs:
          level: info
          development: false
        metrics:
          address: 0.0.0.0:8888
          level: basic
