k8sattributes:
k8sattributes/2:
  passthrough: false
  auth_type: "kubeConfig"
  extract:
    metadata:
      # the following metadata fields configuration options are deprecated
      # - podName
      # - podUID
      # - deployment
      # - namespace
      # - node
      # - startTime
      # extract the following well-known metadata fields from pods and namespaces
      - k8s.pod.name
      - k8s.pod.uid
      - k8s.pod.ip
      - k8s.deployment.name
      - k8s.namespace.name
      - k8s.node.name
      - k8s.pod.start_time
      - k8s.cluster.uid

    annotations:
      - tag_name: a1 # extracts value of annotation with key `annotation-one` and inserts it as a tag with key `a1`
        key: annotation-one
        from: pod
      - tag_name: a2 # extracts value of annotation with key `annotation-two` with regexp and inserts it as a tag with key `a2`
        key: annotation-two
        regex: field=(?P<value>.+)
        from: pod
    labels:
      - tag_name: l1 # extracts value of label with key `label1` and inserts it as a tag with key `l1`
        key: label1
        from: pod
      - tag_name: l2 # extracts value of label with key `label1` with regexp and inserts it as a tag with key `l2`
        key: label2
        regex: field=(?P<value>.+)
        from: pod

  filter:
    namespace: ns2 # only look for pods running in ns2 namespace
    node: ip-111.us-west-2.compute.internal # only look for pods running on this node/host
    node_from_env_var: K8S_NODE # only look for pods running on the node/host specified by the K8S_NODE environment variable
    labels: # only consider pods that match the following labels
      - key: key1 # match pods that have a label `key1=value1`. `op` defaults to "equals" when not specified
        value: value1
      - key: key2 # ignore pods that have a label `key2=value2`.
        value: value2
        op: not-equals
    fields: # works the same way as labels but for fields instead (like annotations)
      - key: key1
        value: value1
      - key: key2
        value: value2
        op: not-equals

  pod_association:
    - sources:
      - from: resource_attribute
        name: ip
    - sources:
      - from: resource_attribute
        name: k8s.pod.ip
    - sources:
      - from: resource_attribute
        name: host.name
    - sources:
      - from: connection
        name: ip

  exclude:
    pods:
      - name: jaeger-agent
      - name: jaeger-collector

k8sattributes/3:
  passthrough: false
  auth_type: "kubeConfig"
  extract:
    annotations:
      - key_regex: opentel.* # extracts Keys & values of annotations matching regex `opentel.*`
        from: pod
    labels:
      - key_regex: opentel.* # extracts Keys & values of labels matching regex `opentel.*`
        from: pod

k8sattributes/4:
  auth_type: "kubeConfig"
  extract:
    metadata:
      # the following metadata field has been depracated
      - k8s.cluster.name

k8sattributes/too_many_sources:
  pod_association:
    - sources:
        - from: resource_attribute
          name: custom-attribute
        - from: resource_attribute
          name: ip
        - from: resource_attribute
          name: k8s.pod.ip
        - from: resource_attribute
          name: host.name
        - from: connection
          name: ip

k8sattributes/deprecated-regex:
  passthrough: false
  auth_type: "kubeConfig"
  extract:
    labels:
      - regex: field=(?P<value>.+)
        from: pod
    annotations:
      - regex: field=(?P<value>.+)
        from: pod

k8sattributes/bad_keys_labels:
  extract:
    labels:
      - tag_name: l1
        key: label1
        key_regex: label\d

k8sattributes/bad_keys_annotations:
  extract:
    annotations:
      - tag_name: a1
        key: annotation1
        key_regex: annotation\d

k8sattributes/bad_from_labels:
  extract:
    labels:
      - tag_name: a1
        key: label1
        from: unknown

k8sattributes/bad_from_annotations:
  extract:
    annotations:
      - tag_name: a1
        key: annotation1
        from: unknown

k8sattributes/bad_regex_labels:
  extract:
    labels:
      - tag_name: a1
        key: label1
        from: pod
        regex: "["

k8sattributes/bad_regex_annotations:
  extract:
    annotations:
      - tag_name: a1
        key: annotation1
        from: pod
        regex: "["

k8sattributes/bad_keyregex_labels:
  extract:
    labels:
      - tag_name: a1
        from: pod
        key_regex: "["

k8sattributes/bad_keyregex_annotations:
  extract:
    annotations:
      - tag_name: a1
        from: pod
        key_regex: "["


k8sattributes/bad_regex_groups_labels:
  extract:
    labels:
      - tag_name: a1
        key: label1
        from: pod
        regex: "((.*)*)"

k8sattributes/bad_regex_groups_annotations:
  extract:
    annotations:
      - tag_name: a1
        key: annotation1
        from: pod
        regex: "((.*)*)"


k8sattributes/bad_regex_name_labels:
  extract:
    labels:
      - tag_name: a1
        key: label1
        from: pod
        regex: "field=(?P<notvalue>.+)"

k8sattributes/bad_regex_name_annotations:
  extract:
    annotations:
      - tag_name: a1
        key: annotation1
        from: pod
        regex: "field=(?P<notvalue>.+)"

k8sattributes/bad_filter_label_op:
  filter:
    labels:
      - key: label
        value: v1
        op: "unknown"

k8sattributes/bad_filter_field_op:
  filter:
    fields:
      - key: field
        value: v1
        op: "exists"