extensions:
  health_check:
  http_forwarder:
    egress:
      endpoint: "https://api.${env:SFX_REALM}.signalfx.com"
  zpages:
receivers:
  sapm:
  signalfx:
  # This section is used to collect the OpenTelemetry Collector metrics
  # Even if just a SignalFx ÂµAPM customer, these metrics are included
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']
              # If you want to use the environment filter
              # In the SignalFx dashboard
              #labels:
                #environment: demo
          metric_relabel_configs:
            - source_labels: [ __name__ ]
              regex: '.*grpc_io.*'
              action: drop
  # Enable Zipkin to support Istio Mixer Adapter
  # https://github.com/signalfx/signalfx-istio-adapter
  zipkin:
processors:
  batch:
  # Optional: If you have a different environment tag name
  # If this option is enabled it must be added to the pipeline section below
  #attributes/copyfromexistingkey:
    #actions:
    #- key: environment
      #from_attribute: YOUR_EXISTING_TAG_NAME
      #action: upsert
  # Optional: If you want to add an environment tag
  # If this option is enabled it must be added to the pipeline section below
  #attributes/newenvironment:
    #actions:
    #- key: environment
      #value: "YOUR_ENVIRONMENT_NAME"
      #action: insert
  # Enabling the memory_limiter is strongly recommended for every pipeline.
  # Configuration is based on the amount of memory allocated to the collector.
  # The configuration below assumes 2GB of memory. In general, the limit should be 90% of
  # the collector's memory up to 2GB, and the spike should be 25% of the
  # collector's memory up to 2GB.
  # For more information, see
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/memorylimiterprocessor/README.md
  memory_limiter:
    check_interval: 2s
    limit_mib: 1800
    spike_limit_mib: 500
exporters:
  # Traces
  sapm:
    # This expects SFX_TOKEN environment variable to contain the access token.
    # Alternatively, specify the access token directly here.
    access_token: "${env:SFX_TOKEN}"
    # This expects SFX_REALM environment variable to contain the realm (e.g. us0).
    # Alternatively, specify the relm directly in the endpoint url here.
    endpoint: "https://ingest.${env:SFX_REALM}.signalfx.com/v2/trace"
  # Metrics + Events
  signalfx:
    # See above for SFX_TOKEN and SFX_REALM.
    access_token: "${env:SFX_TOKEN}"
    realm: "${env:SFX_REALM}"
service:
  pipelines:
    traces:
      receivers: [sapm, zipkin]
      processors: [memory_limiter, batch]
      exporters: [sapm]
    metrics:
      receivers: [signalfx, prometheus]
      processors: [memory_limiter, batch]
      exporters: [signalfx]
    logs:
      receivers: [signalfx]
      processors: [memory_limiter, batch]
      exporters: [signalfx]
  extensions: [health_check, http_forwarder, zpages]
