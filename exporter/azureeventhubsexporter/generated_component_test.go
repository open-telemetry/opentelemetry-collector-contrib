// Code generated by mdatagen. DO NOT EDIT.

package azureeventhubsexporter

import (
	"context"
	"testing"

	"github.com/open-telemetry/opentelemetry-collector-contrib/exporter/azureeventhubsexporter/internal/metadata"
	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/component/componenttest"
	"go.opentelemetry.io/collector/exporter"
	"go.opentelemetry.io/collector/exporter/exportertest"
)

func TestComponentFactoryType(t *testing.T) {
	require.Equal(t, component.MustNewType("azureeventhubs"), NewFactory().Type())
}

func TestComponentConfigStruct(t *testing.T) {
	require.NoError(t, componenttest.CheckConfigStruct(NewFactory().CreateDefaultConfig()))
}

func TestComponentLifecycle(t *testing.T) {
	factory := NewFactory()

	tests := []struct {
		createFn func(ctx context.Context, set exporter.Settings, cfg component.Config) (component.Component, error)
		name     string
	}{
		{
			name: "logs",
			createFn: func(ctx context.Context, set exporter.Settings, cfg component.Config) (component.Component, error) {
				return factory.CreateLogs(ctx, set, cfg)
			},
		},
		{
			name: "metrics",
			createFn: func(ctx context.Context, set exporter.Settings, cfg component.Config) (component.Component, error) {
				return factory.CreateMetrics(ctx, set, cfg)
			},
		},
		{
			name: "traces",
			createFn: func(ctx context.Context, set exporter.Settings, cfg component.Config) (component.Component, error) {
				return factory.CreateTraces(ctx, set, cfg)
			},
		},
	}

	// Note: This test requires a valid connection string to actually start the exporter
	// In real scenarios, the exporter will fail to start without proper Azure Event Hubs configuration
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := factory.CreateDefaultConfig().(*Config)
			// Set a dummy connection string for lifecycle test
			cfg.Auth.ConnectionString = "Endpoint=sb://test.servicebus.windows.net/;SharedAccessKeyName=Test;SharedAccessKey=test"

			c, err := tt.createFn(context.Background(), exportertest.NewNopSettings(metadata.Type), cfg)
			require.NoError(t, err)
			require.NotNil(t, c)

			// Note: We skip the actual start/shutdown as it would require real Azure Event Hubs connection
			// The component creation and configuration validation is sufficient for this test
		})
	}
}
