# Build stage
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make

# Set working directory
WORKDIR /build

# Copy the processor code
COPY processor/streamingaggregationprocessor /repo/processor/streamingaggregationprocessor

# Copy collector builder files
COPY examples/streaming-aggregation-demo/collector-builder /build/

# Fix the replace directive to point to the correct path in the container
RUN sed -i 's|../../../processor/streamingaggregationprocessor|/repo/processor/streamingaggregationprocessor|' /build/go.mod

# Build the custom collector
WORKDIR /build
RUN go mod download && \
    go build -o bin/otelcol-streaming main.go

# Runtime stage
FROM alpine:latest

# Install ca-certificates for HTTPS
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -g 1000 otel && \
    adduser -u 1000 -G otel -s /bin/sh -D otel

# Copy the built collector binary
COPY --from=builder /build/bin/otelcol-streaming /otelcol-streaming

# Set ownership
RUN chown otel:otel /otelcol-streaming

# Switch to non-root user
USER otel

# Expose ports
EXPOSE 4317 4318 8888 8889 8890

# Set the entrypoint
ENTRYPOINT ["/otelcol-streaming"]
CMD ["--config", "/etc/otel-config.yaml"]
