mode: daemonset

image:
  repository: otelcontribcol-dev
  tag: "0.0.1"
  pullPolicy: IfNotPresent

command:
  name: otelcontribcol

extraEnvs:
  - name: K8S_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName

clusterRole:
  create: true
  rules:
    - apiGroups:
        - ''
      resources:
        - 'pods'
        - 'nodes'
        - 'namespaces'
        - 'services'
        - 'endpoints'
        - 'configmaps'
        - 'persistentvolumeclaims'
        - 'persistentvolumes'
      verbs:
        - 'get'
        - 'list'
        - 'watch'
    - apiGroups: [ "" ]
      resources: [ "nodes/stats", "nodes/proxy"]
      verbs: [ "get" ]


config:
  exporters:
    datadog:
      traces:
        span_name_as_resource_name: true
        trace_buffer: 500
      hostname: "otelcol-kangyi"
      api:
        site: ****
        key: ****
      orchestrator:
        cluster_name: "kangyi-otel-cluster"
        endpoints:
          - endpoint: ****
            key: ***
  connectors:
    datadog/connector:

#  processors:
#    attributes/k8sobjects:
#      actions:
#        - key: source
#          value: k8sobjects-otelcol
#          action: insert
#        - key: data_type
#          value: k8s-oetcol
#          action: insert
  receivers:
    otlp:
      protocols:
        http:
          endpoint: 0.0.0.0:4318
        grpc:
          endpoint: 0.0.0.0:4317
    filelog:
      include_file_path: true
      poll_interval: 500ms
      include:
        - /var/log/containers/*.log
    k8sobjects:
      auth_type: serviceAccount
      objects:
        - name: configmaps
          mode: pull
          interval: 15s
        - name: limitranges
          mode: pull
          interval: 15s
        - name: namespaces
          mode: pull
          interval: 15s
        - name: nodes
          mode: pull
          interval: 15s
        - name: persistentvolumeclaims
          mode: pull
          interval: 15s
        - name: persistentvolumes
          mode: pull
          interval: 15s
        - name: pods
          mode: pull
          interval: 15s

  service:
    pipelines:
#      logs/orchestrator:
#        receivers: [ k8sobjects ]
#        processors: [ batch , attributes/k8sobjects ]
#        exporters: [ datadog ]
      logs:
        receivers: [ otlp ,filelog, k8sobjects]
        processors: [  batch ]
        exporters: [ datadog ]