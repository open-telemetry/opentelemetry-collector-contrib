type: sqlserver

status:
  class: receiver
  stability:
    beta: [metrics]
    development: [logs]
  distributions: [contrib]
  codeowners:
    active: [StefanKurek, sincejune, crobert-1]
    seeking_new: true

resource_attributes:
  sqlserver.database.name:
    description: The name of the SQL Server database.
    enabled: true
    type: string
  sqlserver.instance.name:
    description: The name of the SQL Server instance being monitored.
    enabled: false
    type: string
  sqlserver.computer.name:
    description: The name of the SQL Server instance being monitored.
    enabled: false
    type: string
  server.address:
    description: Name of the database host.
    enabled: false
    type: string
  server.port:
    description: Server port number.
    enabled: false
    type: int
  host.name:
    description: The host name of SQL Server
    enabled: true
    type: string

attributes:
  # attributes for metrics
  page.operations:
    name_override: type
    description: The page operation types.
    type: string
    enum: [read, write]
  physical_filename:
    description: The physical filename of the file being monitored.
    type: string
  logical_filename:
    description: The logical filename of the file being monitored.
    type: string
  file_type:
    description: The type of file being monitored.
    type: string
  database.status:
    description: The current status of a database
    type: string
    enum: [online, restoring, recovering, pending_recovery, suspect, offline]
  direction:
    description: The direction of flow of bytes or operations.
    type: string
    enum: [read, write]
  replica.direction:
    description: The direction of flow of bytes for replica.
    type: string
    enum: [transmit, receive]
  table.state:
    description: The state of the table.
    type: string
    enum: [active, inactive]
  table.status:
    description: The status of the table.
    type: string
    enum: [temporary, permanent]
  tempdb.state:
    description: The status of the tempdb space usage.
    type: string
    enum: [free, used]
  # attributes for events
  ## top query
  sqlserver.total_worker_time:
    description: Total amount of CPU time that was consumed by executions of this plan since it was compiled, reported in delta seconds.
    type: double
  db.query.text:
    description: The text of the database query being executed.
    type: string
  sqlserver.execution_count:
    description: Number of times that the plan has been executed since it was last compiled, reported in delta value.
    type: int
  sqlserver.total_logical_reads:
    description: Total number of logical reads performed by executions of this plan since it was compiled, reported in delta value.
    type: int
  sqlserver.total_logical_writes:
    description: Total number of logical writes performed by executions of this plan since it was compiled, reported in delta value.
    type: int
  sqlserver.total_physical_reads:
    description: Total number of physical reads performed by executions of this plan since it was compiled, reported in delta value.
    type: int
  sqlserver.query_hash:
    description: Binary hash value calculated on the query and used to identify queries with similar logic, reported in the HEX format.
    type: string
  sqlserver.query_plan:
    description: The query execution plan used by the SQL Server.
    type: string
  sqlserver.query_plan_hash:
    description: Binary hash value calculated on the query execution plan and used to identify similar query execution plans, reported in the HEX format.
    type: string
  sqlserver.total_rows:
    description: Total number of rows returned by the query, reported in delta value.
    type: int
  sqlserver.total_elapsed_time:
    description: Total elapsed time for completed executions of this plan, reported in delta seconds.
    type: double
  sqlserver.total_grant_kb:
    description: The total amount of reserved memory grant in KB this plan received since it was compiled, reported in delta value.
    type: int
  server.address:
    description: The network address of the server hosting the database.
    type: string
  server.port:
    description: The port number on which the server is listening.
    type: int
  db.server.name:
    description: The name of the server hosting the database.
    type: string

events:
  db.server.top_query:
    enabled: true
    description: top query
    attributes:
      - sqlserver.total_worker_time
      - db.query.text
      - sqlserver.execution_count
      - sqlserver.total_logical_reads
      - sqlserver.total_logical_writes
      - sqlserver.total_physical_reads
      - sqlserver.query_hash
      - sqlserver.query_plan
      - sqlserver.query_plan_hash
      - sqlserver.total_rows
      - sqlserver.total_elapsed_time
      - sqlserver.total_grant_kb
      - server.address
      - server.port
      - db.server.name

metrics:
  sqlserver.user.connection.count:
    enabled: true
    description: Number of users connected to the SQL Server.
    unit: "{connections}"
    gauge:
      value_type: int
  sqlserver.lock.wait_time.avg:
    enabled: true
    description: Average wait time for all lock requests that had to wait.
    unit: ms
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.lock.wait.count:
    enabled: false
    description: Cumulative count of lock waits that occurred.
    unit: "{wait}"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: int
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.lock.wait.rate:
    enabled: true
    description: Number of lock requests resulting in a wait.
    unit: "{requests}/s"
    gauge:
      value_type: double
  sqlserver.batch.request.rate:
    enabled: true
    description: Number of batch requests received by SQL Server.
    unit: "{requests}/s"
    gauge:
      value_type: double
  sqlserver.batch.sql_compilation.rate:
    enabled: true
    description: Number of SQL compilations needed.
    unit: "{compilations}/s"
    gauge:
      value_type: double
  sqlserver.batch.sql_recompilation.rate:
    enabled: true
    description: Number of SQL recompilations needed.
    unit: "{compilations}/s"
    gauge:
      value_type: double
  sqlserver.page.buffer_cache.hit_ratio:
    enabled: true
    description: Pages found in the buffer pool without having to read from disk.
    unit: "%"
    gauge:
      value_type: double
  sqlserver.page.life_expectancy:
    enabled: true
    description: Time a page will stay in the buffer pool.
    unit: s
    gauge:
      value_type: int
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.page.split.rate:
    enabled: true
    description: Number of pages split as a result of overflowing index pages.
    unit: "{pages}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.page.lazy_write.rate:
    enabled: true
    description: Number of lazy writes moving dirty pages to disk.
    unit: "{writes}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.page.checkpoint.flush.rate:
    enabled: true
    description: Number of pages flushed by operations requiring dirty pages to be flushed.
    unit: "{pages}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.page.operation.rate:
    enabled: true
    description: Number of physical database page operations issued.
    unit: "{operations}/s"
    gauge:
      value_type: double
    attributes: [page.operations]
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.growth.count:
    enabled: true
    description: Total number of transaction log expansions for a database.
    unit: "{growths}"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: int
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.shrink.count:
    enabled: true
    description: Total number of transaction log shrinks for a database.
    unit: "{shrinks}"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: int
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.usage:
    enabled: true
    description: Percent of transaction log space used.
    unit: "%"
    gauge:
      value_type: int
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.flush.wait.rate:
    enabled: true
    description: Number of commits waiting for a transaction log flush.
    unit: "{commits}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.flush.rate:
    enabled: true
    description: Number of log flushes.
    unit: "{flushes}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction_log.flush.data.rate:
    enabled: true
    description: Total number of log bytes flushed.
    unit: By/s
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction.rate:
    enabled: true
    description: Number of transactions started for the database (not including XTP-only transactions).
    unit: "{transactions}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.transaction.write.rate:
    enabled: true
    description: Number of transactions that wrote to the database and committed.
    unit: "{transactions}/s"
    gauge:
      value_type: double
    extended_documentation: This metric is only available when running on Windows.
  sqlserver.database.latency:
    enabled: false
    description: Total time that the users waited for I/O issued on this file.
    unit: "s"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: double
    attributes: [physical_filename, logical_filename, file_type, direction]
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.database.operations:
    enabled: false
    description: The number of operations issued on the file.
    unit: "{operations}"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: int
      input_type: string
    attributes: [ physical_filename, logical_filename, file_type, direction ]
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.database.io:
    enabled: false
    description: The number of bytes of I/O on this file.
    unit: "By"
    sum:
      monotonic: true
      aggregation_temporality: cumulative
      value_type: int
      input_type: string
    attributes: [ physical_filename, logical_filename, file_type, direction ]
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.resource_pool.disk.operations:
    enabled: false
    description: The rate of operations issued.
    unit: "{operations}/s"
    gauge:
      value_type: double
    attributes: [ direction ]
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.resource_pool.disk.throttled.read.rate:
    enabled: false
    description: The number of read operations that were throttled in the last second
    unit: "{reads}/s"
    gauge:
      value_type: int
      input_type: string
    attributes: []
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.resource_pool.disk.throttled.write.rate:
    enabled: false
    description: The number of write operations that were throttled in the last second
    unit: "{writes}/s"
    gauge:
      value_type: double
      input_type: string
    attributes: []
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.processes.blocked:
    enabled: false
    description: The number of processes that are currently blocked
    unit: "{processes}"
    gauge:
      value_type: int
      input_type: string
    attributes: []
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.database.count:
    enabled: false
    description: The number of databases
    unit: "{databases}"
    gauge:
      value_type: int
      input_type: string
    attributes: [database.status]
    extended_documentation: This metric is only available when the receiver is configured to directly connect to SQL Server.
  sqlserver.table.count:
    enabled: false
    description: The number of tables.
    unit: “{tables}”
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: int
    attributes: [table.state, table.status]
  sqlserver.database.backup_or_restore.rate:
    enabled: false
    description: Total number of backups/restores.
    unit: “{backups_or_restores}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.replica.data.rate:
    enabled: false
    description: Throughput rate of replica data.
    unit: By/s
    gauge:
      value_type: double
    attributes: [replica.direction]
  sqlserver.database.execution.errors:
    enabled: false
    description: Number of execution errors.
    unit: “{errors}”
    gauge:
      value_type: int
    attributes: []
  sqlserver.page.buffer_cache.free_list.stalls.rate:
    enabled: false
    description: Number of free list stalls.
    unit: “{stalls}/s”
    gauge:
      value_type: int
    attributes: []
  sqlserver.database.tempdb.space:
    enabled: false
    description: Total free space in temporary DB.
    unit: “KB”
    sum:
      monotonic: false
      aggregation_temporality: cumulative
      value_type: int
    attributes: [tempdb.state]
  sqlserver.database.full_scan.rate:
    enabled: false
    description: The number of unrestricted full table or index scans.
    unit: "{scans}/s"
    gauge:
      value_type: double
    attributes: []
  sqlserver.index.search.rate:
    enabled: false
    description: Total number of index searches.
    unit: “{searches}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.lock.timeout.rate:
    enabled: false
    description: Total number of lock timeouts.
    unit: “{timeouts}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.login.rate:
    enabled: false
    description: Total number of logins.
    unit: “{logins}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.logout.rate:
    enabled: false
    description: Total number of logouts.
    unit: “{logouts}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.deadlock.rate:
    enabled: false
    description: Total number of deadlocks.
    unit: “{deadlocks}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.transaction.mirror_write.rate:
    enabled: false
    description: Total number of mirror write transactions.
    unit: “{transactions}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.memory.grants.pending.count:
    enabled: false
    description: Total number of memory grants pending.
    unit: “{grants}”
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: int
    attributes: []
  sqlserver.page.lookup.rate:
    enabled: false
    description: Total number of page lookups.
    unit: “{lookups}/s”
    gauge:
      value_type: double
    attributes: []
  sqlserver.transaction.delay:
    enabled: false
    description: Time consumed in transaction delays.
    unit: ms
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: double
    attributes: []
  sqlserver.memory.usage:
    enabled: false
    description: Total memory in use.
    unit: “KB”
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: double
    attributes: []
  sqlserver.database.tempdb.version_store.size:
    enabled: false
    description: TempDB version store size.
    unit: “KB”
    gauge:
      value_type: double
    attributes: []



tests:
  config:
  goleak:
    ignore:
      any: "github.com/godbus/dbus.(*Conn).inWorker"
      top:
        # Can be removed once the following issue is resolved:
        # https://github.com/snowflakedb/gosnowflake/issues/1369
        - "github.com/snowflakedb/gosnowflake.initOCSPCacheClearer.func1"
