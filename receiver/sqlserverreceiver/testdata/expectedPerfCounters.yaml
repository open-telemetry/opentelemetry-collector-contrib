resourceMetrics:
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of unrestricted full table or index scans.
            gauge:
              dataPoints:
                - asInt: 14458
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.database.full_scan.rate
            unit: "{scans}/s"
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of execution errors.
            gauge:
              dataPoints:
                - asInt: 1048
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.database.execution.errors
            unit: “{errors}”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of index searches.
            gauge:
              dataPoints:
                - asDouble: 1619118.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.index.search.rate
            unit: “{searches}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Throughput rate of replica data.
            gauge:
              dataPoints:
                - asDouble: 0.000000
                  attributes:
                    - key: replica.direction
                      value:
                        stringValue: receive
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.replica.data.rate
            unit: By/s
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Throughput rate of replica data.
            gauge:
              dataPoints:
                - asDouble: 0.000000
                  attributes:
                    - key: replica.direction
                      value:
                        stringValue: transmit
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.replica.data.rate
            unit: By/s
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Pages found in the buffer pool without having to read from disk.
            gauge:
              dataPoints:
                - asDouble: 100
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.page.buffer_cache.hit_ratio
            unit: '%'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of free list stalls.
            gauge:
              dataPoints:
                - asInt: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.page.buffer_cache.free_list.stalls.rate
            unit: “{stalls}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of page lookups.
            gauge:
              dataPoints:
                - asDouble: 3294704.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.page.lookup.rate
            unit: “{lookups}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of mirror write transactions.
            gauge:
              dataPoints:
                - asDouble: 0.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.transaction.mirror_write.rate
            unit: “{transactions}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Time consumed in transaction delays.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asDouble: 0.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.transaction.delay
            unit: ms
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of backups/restores.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name:  sqlserver.database.backup_or_restore.rate
            unit: “{backups_or_restores}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of tables.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asInt: 1
                  attributes:
                    - key: table.state
                      value:
                        stringValue: active
                    - key: table.status
                      value:
                        stringValue: temporary
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.table.count
            unit: “{tables}”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of logins.
            gauge:
              dataPoints:
                - asDouble: 333
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.login.rate
            unit: “{logins}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of logouts.
            gauge:
              dataPoints:
                - asDouble: 330
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.logout.rate
            unit: “{logouts}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of processes that are currently blocked
            gauge:
              dataPoints:
                - asInt: "0"
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.processes.blocked
            unit: '{processes}'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of users connected to the SQL Server.
            gauge:
              dataPoints:
                - asInt: "3"
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.user.connection.count
            unit: '{connections}'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of lock timeouts.
            gauge:
              dataPoints:
                - asDouble: 1.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.lock.timeout.rate
            unit: “{timeouts}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of lock requests resulting in a wait.
            gauge:
              dataPoints:
                - asDouble: 17
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.lock.wait.rate
            unit: '{requests}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of deadlocks.
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.deadlock.rate
            unit: “{deadlocks}/s”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total number of memory grants pending.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asInt: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.memory.grants.pending.count
            unit: “{grants}”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description:  Total memory in use.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asDouble: 30960.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.memory.usage
            unit: “KB”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of read operations that were throttled in the last second
            gauge:
              dataPoints:
                - asInt: "0"
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.resource_pool.disk.throttled.read.rate
            unit: '{reads}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of write operations that were throttled in the last second
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.resource_pool.disk.throttled.write.rate
            unit: '{writes}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of write operations that were throttled in the last second
            gauge:
              dataPoints:
                - asDouble: 0
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.resource_pool.disk.throttled.write.rate
            unit: '{writes}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: The number of read operations that were throttled in the last second
            gauge:
              dataPoints:
                - asInt: "0"
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.resource_pool.disk.throttled.read.rate
            unit: '{reads}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description:  Total memory in use.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asDouble: 277608.000000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.memory.usage
            unit: “KB”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of batch requests received by SQL Server.
            gauge:
              dataPoints:
                - asDouble: 3375
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.batch.request.rate
            unit: '{requests}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of SQL compilations needed.
            gauge:
              dataPoints:
                - asDouble: 413
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.batch.sql_compilation.rate
            unit: '{compilations}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Number of SQL recompilations needed.
            gauge:
              dataPoints:
                - asDouble: 63
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.batch.sql_recompilation.rate
            unit: '{compilations}/s'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: Total free space in temporary DB.
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asInt: 61824
                  attributes:
                    - key: tempdb.state
                      value:
                        stringValue: free
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.database.tempdb.space
            unit: “KB”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
  - resource:
      attributes:
        - key: sqlserver.instance.name
          value:
            stringValue: 8cac97ac9b8f
        - key: server.address
          value:
            stringValue: 0.0.0.0
        - key: server.port
          value:
            intValue: "1433"
    scopeMetrics:
      - metrics:
          - description: TempDB version store size.
            gauge:
              dataPoints:
                - asDouble: 0.0000
                  startTimeUnixNano: "1000000"
                  timeUnixNano: "2000000"
            name: sqlserver.database.tempdb.version_store.size
            unit: “KB”
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
