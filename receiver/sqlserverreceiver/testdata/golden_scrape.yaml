resourceMetrics:
  - resource:
      attributes:
        - key: sqlserver.database.name
          value:
            stringValue: db-instance
    scopeMetrics:
      - metrics:
          - description: Number of batch requests received by SQL Server.
            gauge:
              dataPoints:
                - asDouble: 1
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.batch.request.rate
            unit: '{requests}/s'
          - description: Number of SQL compilations needed.
            gauge:
              dataPoints:
                - asDouble: 1
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.batch.sql_compilation.rate
            unit: '{compilations}/s'
          - description: Number of SQL recompilations needed.
            gauge:
              dataPoints:
                - asDouble: 1
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.batch.sql_recompilation.rate
            unit: '{compilations}/s'
          - description: Number of lock requests resulting in a wait.
            gauge:
              dataPoints:
                - asDouble: 2
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.lock.wait.rate
            unit: '{requests}/s'
          - description: Average wait time for all lock requests that had to wait.
            gauge:
              dataPoints:
                - asDouble: 2
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.lock.wait_time.avg
            unit: ms
          - description: Pages found in the buffer pool without having to read from disk.
            gauge:
              dataPoints:
                - asDouble: 3
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.buffer_cache.hit_ratio
            unit: '%'
          - description: Number of pages flushed by operations requiring dirty pages to be flushed.
            gauge:
              dataPoints:
                - asDouble: 3
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.checkpoint.flush.rate
            unit: '{pages}/s'
          - description: Number of lazy writes moving dirty pages to disk.
            gauge:
              dataPoints:
                - asDouble: 3
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.lazy_write.rate
            unit: '{writes}/s'
          - description: Time a page will stay in the buffer pool.
            gauge:
              dataPoints:
                - asInt: "3"
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.life_expectancy
            unit: s
          - description: Number of physical database page operations issued.
            gauge:
              dataPoints:
                - asDouble: 3
                  attributes:
                    - key: type
                      value:
                        stringValue: read
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
                - asDouble: 3
                  attributes:
                    - key: type
                      value:
                        stringValue: write
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.operation.rate
            unit: '{operations}/s'
          - description: Number of pages split as a result of overflowing index pages.
            gauge:
              dataPoints:
                - asDouble: 4
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.page.split.rate
            unit: '{pages}/s'
          - description: Number of transactions started for the database (not including XTP-only transactions).
            gauge:
              dataPoints:
                - asDouble: 5
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction.rate
            unit: '{transactions}/s'
          - description: Number of transactions that wrote to the database and committed.
            gauge:
              dataPoints:
                - asDouble: 5
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction.write.rate
            unit: '{transactions}/s'
          - description: Total number of log bytes flushed.
            gauge:
              dataPoints:
                - asDouble: 5
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction_log.flush.data.rate
            unit: By/s
          - description: Number of log flushes.
            gauge:
              dataPoints:
                - asDouble: 5
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction_log.flush.rate
            unit: '{flushes}/s'
          - description: Number of commits waiting for a transaction log flush.
            gauge:
              dataPoints:
                - asDouble: 5
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction_log.flush.wait.rate
            unit: '{commits}/s'
          - description: Total number of transaction log expansions for a database.
            name: sqlserver.transaction_log.growth.count
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asInt: "5"
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
              isMonotonic: true
            unit: '{growths}'
          - description: Total number of transaction log shrinks for a database.
            name: sqlserver.transaction_log.shrink.count
            sum:
              aggregationTemporality: 2
              dataPoints:
                - asInt: "5"
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
              isMonotonic: true
            unit: '{shrinks}'
          - description: Percent of transaction log space used.
            gauge:
              dataPoints:
                - asInt: "5"
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.transaction_log.usage
            unit: '%'
          - description: Number of users connected to the SQL Server.
            gauge:
              dataPoints:
                - asInt: "0"
                  startTimeUnixNano: "1679438452495397400"
                  timeUnixNano: "1679438452496922500"
            name: sqlserver.user.connection.count
            unit: '{connections}'
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest
