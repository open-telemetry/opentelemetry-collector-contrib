SELECT CONVERT ( NVARCHAR, TODATETIMEOFFSET ( CURRENT_TIMESTAMP, DATEPART ( TZOFFSET, SYSDATETIMEOFFSET ( ) ) ), ? ), CONVERT ( NVARCHAR, TODATETIMEOFFSET ( req.start_time, DATEPART ( TZOFFSET, SYSDATETIMEOFFSET ( ) ) ), ? ), sess.login_name, sess.last_request_start_time, sess.session_id, DB_NAME ( sess.database_id ), sess.status, req.status, SUBSTRING ( qt.text, ( req.statement_start_offset / ? ) + ? ( ( CASE req.statement_end_offset WHEN ? THEN DATALENGTH ( qt.text ) ELSE req.statement_end_offset END - req.statement_start_offset ) / ? ) + ? ), SUBSTRING ( qt.text, ? ), c.client_tcp_port, c.client_net_address, sess.host_name, sess.program_name, sess.is_user_process, req.command, req.blocking_session_id, req.wait_type, req.wait_time, req.last_wait_type, req.wait_resource, req.open_transaction_count, req.transaction_id, req.percent_complete, req.estimated_completion_time, req.cpu_time, req.total_elapsed_time, req.reads, req.writes, req.logical_reads, req.transaction_isolation_level, req.lock_timeout, req.deadlock_priority, req.row_count, req.query_hash, req.query_plan_hash, req.context_info FROM sys.dm_exec_sessions sess INNER JOIN sys.dm_exec_connections c ON sess.session_id = c.session_id INNER JOIN sys.dm_exec_requests req ON c.connection_id = req.connection_id CROSS APPLY sys.dm_exec_sql_text ( req.sql_handle ) qt WHERE sess.status != ?
