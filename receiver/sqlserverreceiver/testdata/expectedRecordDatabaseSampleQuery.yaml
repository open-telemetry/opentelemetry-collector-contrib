resourceLogs:
  - resource:
      attributes:
      - key: sqlserver.computer.name
        value:
          stringValue: DESKTOP-GHAEGRD
      - key: sqlserver.instance.name
        value:
          stringValue: sqlserver
      - key: host.name
        value:
          stringValue: "0.0.0.0"
    scopeLogs:
      - logRecords:
          - attributes:
              - key: db.system.name
                value:
                  stringValue: microsoft.sql_server
              - key: db.namespace
                value:
                  stringValue: master
              - key: network.peer.address
                value:
                  stringValue: "172.19.0.1"
              - key: network.peer.port
                value:
                  intValue: 59286
              - key: client.port
                value:
                  intValue: 59286
              - key: client.address
                value:
                  stringValue: DESKTOP-GHAEGRD
              - key: sqlserver.query_start
                value:
                  stringValue: 2025-02-12T16:37:54.843+08:00
              - key: sqlserver.session_id
                value:
                  intValue: 60
              - key: sqlserver.session_status
                value:
                  stringValue: running
              - key: sqlserver.request_status
                value:
                  stringValue: running
              - key: sqlserver.command
                value:
                  stringValue: SELECT
              - key: db.query.text
                value:
                  stringValue: "SELECT DB_NAME ( r.database_id ), ISNULL ( c.client_net_address, ? ), ISNULL ( c.client_tcp_port, ? ), CONVERT ( NVARCHAR, TODATETIMEOFFSET ( r.start_time, DATEPART ( TZOFFSET, SYSDATETIMEOFFSET ( ) ) ), ? ), s.session_id, s.STATUS, r.STATUS, ISNULL ( s.host_name, ? ), r.command, SUBSTRING ( o.TEXT, ( r.statement_start_offset / ? ) + ? ( ( CASE r.statement_end_offset WHEN - ? THEN DATALENGTH ( o.TEXT ) ELSE r.statement_end_offset END - r.statement_start_offset ) / ? ) + ? ), r.blocking_session_id, ISNULL ( r.wait_type, ? ), r.wait_time, r.wait_resource, r.open_transaction_count, r.transaction_id, r.percent_complete, r.estimated_completion_time, r.cpu_time, r.total_elapsed_time, r.reads, r.writes, r.logical_reads, r.transaction_isolation_level, r.LOCK_TIMEOUT, r.DEADLOCK_PRIORITY, r.row_count, r.query_hash, r.query_plan_hash, ISNULL ( r.context_info, CONVERT ( VARBINARY, ? ) ), s.login_name FROM sys.dm_exec_requests r INNER JOIN sys.dm_exec_sessions s ON r.session_id = s.session_id INNER JOIN sys.dm_exec_connections c ON s.session_id = c.session_id CROSS APPLY sys.dm_exec_sql_text ( r.plan_handle )"
              - key: sqlserver.blocking_session_id
                value:
                  intValue: 0
              - key: sqlserver.wait_type
                value:
                  stringValue: ""
              - key: sqlserver.wait_time
                value:
                  doubleValue: 0
              - key: sqlserver.wait_resource
                value:
                  stringValue: ""
              - key: sqlserver.open_transaction_count
                value:
                  intValue: 0
              - key: sqlserver.transaction_id
                value:
                  intValue: 11089
              - key: sqlserver.percent_complete
                value:
                  doubleValue: 0
              - key: sqlserver.estimated_completion_time
                value:
                  doubleValue: 0
              - key: sqlserver.cpu_time
                value:
                  doubleValue: 0.006
              - key: sqlserver.total_elapsed_time
                value:
                  doubleValue: 0.006
              - key: sqlserver.reads
                value:
                  intValue: 0
              - key: sqlserver.writes
                value:
                  intValue: 0
              - key: sqlserver.logical_reads
                value:
                  intValue: 38
              - key: sqlserver.transaction_isolation_level
                value:
                  intValue: 2
              - key: sqlserver.lock_timeout
                value:
                  doubleValue: -0.001
              - key: sqlserver.deadlock_priority
                value:
                  intValue: 0
              - key: sqlserver.row_count
                value:
                  intValue: 1
              - key: sqlserver.query_hash
                value:
                  stringValue: "307837304133423133304231303438443444"
              - key: sqlserver.query_plan_hash
                value:
                  stringValue: "307831343032313046363442373838434239"
              - key: sqlserver.context_info
                value:
                  stringValue: ""
              - key: sqlserver.username
                value:
                  stringValue: sa
            body:
              stringValue: sample
        scope:
          name: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/sqlserverreceiver
          version: latest