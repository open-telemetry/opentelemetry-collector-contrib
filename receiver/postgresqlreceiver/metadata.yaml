type: postgresql

status:
  class: receiver
  stability:
    beta: [metrics]
  distributions: [contrib]
  codeowners:
    active: [djaglowski]

resource_attributes:
  postgresql.database.name:
    description: The name of the database.
    enabled: true
    type: string
  postgresql.schema.name:
    description: The schema name.
    enabled: true
    type: string
  postgresql.table.name:
    description: The table name.
    enabled: true
    type: string
  postgresql.index.name:
    description: The name of the index on a table.
    enabled: true
    type: string

attributes:
  bg_buffer_source:
    description: The source of a buffer write.
    type: string
    enum:
      - backend
      - backend_fsync
      - checkpoints
      - bgwriter
    name_override: source
  bg_checkpoint_type:
    description: The type of checkpoint state.
    type: string
    enum:
      - requested
      - scheduled
    name_override: type
  bg_duration_type:
    description: The type of time spent during the checkpoint.
    type: string
    enum:
      - sync
      - write
    name_override: type
  lock_type:
    description: Type of the lockable object.
    type: string
  mode:
    description: Name of the lock mode held or desired by the process.
    type: string
  source:
    description: The block read source type.
    type: string
    enum:
      - heap_read
      - heap_hit
      - idx_read
      - idx_hit
      - toast_read
      - toast_hit
      - tidx_read
      - tidx_hit
  operation:
    description: The database operation.
    type: string
    enum: [ins, upd, del, hot_upd]
  relation:
    description: OID of the relation targeted by the lock, or null if the target is not a relation or part of a relation.
    type: string
  replication_client:
    description: The IP address of the client connected to this backend. If this field is "unix", it indicates either that the client is connected via a Unix socket.
    type: string
  state:
    description: The tuple (row) state.
    type: string
    enum: [dead, live]
  wal_operation_lag:
    name_override: operation
    description: The operation which is responsible for the lag.
    type: string
    enum: [flush, replay, write]

metrics:
  postgresql.bgwriter.buffers.allocated:
    description: Number of buffers allocated.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "{buffers}"
  postgresql.bgwriter.buffers.writes:
    attributes:
      - bg_buffer_source
    description: Number of buffers written.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "{buffers}"
  postgresql.bgwriter.checkpoint.count:
    attributes:
      - bg_checkpoint_type
    description: The number of checkpoints performed.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "{checkpoints}"
  postgresql.bgwriter.duration:
    attributes:
      - bg_duration_type
    description: Total time spent writing and syncing files to disk by checkpoints.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: double
    unit: ms
  postgresql.bgwriter.maxwritten:
    description: Number of times the background writer stopped a cleaning scan because it had written too many buffers.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "1"
  postgresql.blocks_read:
    enabled: true
    description: The number of blocks read.
    unit: "1"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
    attributes: [source]
  postgresql.commits:
    enabled: true
    description: The number of commits.
    unit: "1"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
  postgresql.database.count:
    description: Number of user databases.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: int
    unit: "{databases}"
  postgresql.database.locks:
    enabled: false
    description: The number of database locks.
    unit: "{lock}"
    gauge:
      value_type: int
    attributes: [relation, mode, lock_type]
  postgresql.db_size:
    enabled: true
    description: The database disk usage.
    unit: By
    sum:
      value_type: int
      monotonic: false
      aggregation_temporality: cumulative
  postgresql.backends:
    enabled: true
    description: The number of backends.
    unit: "1"
    sum:
      value_type: int
      monotonic: false
      aggregation_temporality: cumulative
  postgresql.connection.max:
    enabled: true
    description: Configured maximum number of client connections allowed
    unit: "{connections}"
    gauge:
      value_type: int
  postgresql.rows:
    enabled: true
    description: The number of rows in the database.
    unit: "1"
    sum:
      value_type: int
      monotonic: false
      aggregation_temporality: cumulative
    attributes: [state]
  postgresql.index.scans:
    description: The number of index scans on a table.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "{scans}"
  postgresql.index.size:
    description: The size of the index on disk.
    enabled: true
    gauge:
      value_type: int
    unit: "By"
  postgresql.operations:
    enabled: true
    description: The number of db row operations.
    unit: "1"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
    attributes: [operation]
  postgresql.replication.data_delay:
    attributes: [replication_client]
    description: The amount of data delayed in replication.
    enabled: true
    gauge:
      value_type: int
    unit: By
  postgresql.rollbacks:
    enabled: true
    description: The number of rollbacks.
    unit: "1"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
  postgresql.deadlocks:
    enabled: false
    description: The number of deadlocks.
    unit: "{deadlock}"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
  postgresql.sequential_scans:
    enabled: false
    description: The number of sequential scans.
    unit: "{sequential_scan}"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative
  postgresql.table.count:
    description: Number of user tables in a database.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: int
    unit: "{table}"
  postgresql.table.size:
    description: Disk space used by a table.
    enabled: true
    unit: By
    sum:
      aggregation_temporality: cumulative
      monotonic: false
      value_type: int
  postgresql.table.vacuum.count:
    description: Number of times a table has manually been vacuumed.
    enabled: true
    unit: "{vacuums}"
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
  postgresql.temp_files:
    enabled: false
    description: The number of temp files.
    unit: "{temp_file}"
    sum:
      value_type: int
      monotonic: true
      aggregation_temporality: cumulative   
  postgresql.wal.age:
    description: Age of the oldest WAL file.
    extended_documentation: |
     This metric requires WAL to be enabled with at least one replica.
    enabled: true
    unit: s
    gauge:
      value_type: int
  postgresql.wal.lag:
    attributes: [wal_operation_lag, replication_client]
    description: Time between flushing recent WAL locally and receiving notification that the standby server has completed an operation with it.
    enabled: true
    unit: s
    gauge:
      value_type: int
    extended_documentation: |
      This metric requires WAL to be enabled with at least one replica.
  postgresql.wal.delay:
    attributes: [wal_operation_lag, replication_client]
    description: Time between flushing recent WAL locally and receiving notification that the standby server has completed an operation with it.
    enabled: false
    unit: s
    gauge:
      value_type: double
    extended_documentation: |
      This metric requires WAL to be enabled with at least one replica.
  
tests:
  config:
