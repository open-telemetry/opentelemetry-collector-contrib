# OpenTelemetry Collector Configuration - TEST VERSION  
# Using standard sqlserverreceiver to verify the setup works

# Extensions provide additional functionality
extensions:
  # Health check endpoint
  health_check:
    endpoint: localhost:13133

# Service configuration
service:
  # Enable extensions
  extensions: [health_check]
  
  # Define the data pipeline
  pipelines:
    # Metrics pipeline: receiver -> processor -> exporter
    metrics:
      receivers: [sqlserver]
      processors: [memory_limiter, batch, resource]
      exporters: [otlphttp, debug]
  
  # Telemetry configuration for the collector itself
  telemetry:
    logs:
      level: info

# Processors transform and enrich the data
processors:
  # Memory limiter prevents out-of-memory issues
  memory_limiter:
    limit_mib: 256
    spike_limit_mib: 64
  
  # Batch processor groups data for efficient transmission
  batch:
    timeout: 10s
    send_batch_size: 1024
  
  # Resource processor adds metadata to all telemetry
  resource:
    attributes:
      - key: deployment.environment
        value: "production"
        action: upsert
      - key: service.name
        value: "sql-server-monitoring"
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert

# Receivers collect telemetry data
receivers:
  # Standard SQL Server Receiver (for testing)
  sqlserver:
    # SQL Server connection configuration
    server: "20.235.136.68"
    port: "1433"
    username: "newrelic"
    password: "2(YJ}oqOT9p>>uxhI.6{"
    database: "master"
    
    # Collection interval
    collection_interval: 60s

# Exporters send telemetry data to destinations
exporters:
  # New Relic OTLP HTTP Exporter
  otlphttp:
    # New Relic OTLP endpoint
    endpoint: "https://staging-otlp.nr-data.net:4317"
    
    # Headers for authentication
    headers:
      api-key: "a242255948a2fa7ee573da4d8b56354dFFFFNRAL"
    
    # TLS configuration
    tls:
      insecure: false
    
    # Retry configuration
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 30s
      max_elapsed_time: 300s
    
    # Queue configuration for handling bursts
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 100
    
    # Compression (gzip is recommended)
    compression: gzip
    
    # Timeout for HTTP requests
    timeout: 30s
  
  # Debug exporter for debugging (outputs to console)
  debug:
    verbosity: detailed
    # Use detailed format to see all metrics
    sampling_initial: 2
    sampling_thereafter: 500
