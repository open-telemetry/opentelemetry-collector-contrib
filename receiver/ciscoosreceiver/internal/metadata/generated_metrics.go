// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"time"

	"go.opentelemetry.io/collector/pdata/pmetric"
	"go.opentelemetry.io/collector/receiver"
)


// MetricsBuilder provides an interface for scrapers to report metrics while taking care of all the transformations
// required to produce metric representation defined in metadata and user config.
type MetricsBuilder struct {
	config    MetricsBuilderConfig
	startTime time.Time
}

// metricBuilderOption applies changes to default metrics builder.
type metricBuilderOption func(*MetricsBuilder)

// WithStartTime sets startTime on the metrics builder.
func WithStartTime(startTime time.Time) metricBuilderOption {
	return func(mb *MetricsBuilder) {
		mb.startTime = startTime
	}
}

// NewMetricsBuilder provides a metrics builder for ciscoosreceiver metrics.
func NewMetricsBuilder(mbc MetricsBuilderConfig, settings receiver.Settings, options ...metricBuilderOption) *MetricsBuilder {
	mb := &MetricsBuilder{
		config:    mbc,
		startTime: time.Now(),
	}
	for _, op := range options {
		op(mb)
	}
	return mb
}

// Emit returns all the metrics accumulated by the metrics builder and updates the internal state to be ready for recording another set of metrics.
func (mb *MetricsBuilder) Emit(options ...ResourceOption) pmetric.Metrics {
	metrics := pmetric.NewMetrics()
	return metrics
}

// ResourceOption applies changes to provided resource.
type ResourceOption func(pmetric.ResourceMetrics)
