// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/filter"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for oracledb metrics.
type MetricsConfig struct {
	OracledbConsistentGets        MetricConfig `mapstructure:"oracledb.consistent_gets"`
	OracledbCPUTime               MetricConfig `mapstructure:"oracledb.cpu_time"`
	OracledbDbBlockGets           MetricConfig `mapstructure:"oracledb.db_block_gets"`
	OracledbDmlLocksLimit         MetricConfig `mapstructure:"oracledb.dml_locks.limit"`
	OracledbDmlLocksUsage         MetricConfig `mapstructure:"oracledb.dml_locks.usage"`
	OracledbEnqueueDeadlocks      MetricConfig `mapstructure:"oracledb.enqueue_deadlocks"`
	OracledbEnqueueLocksLimit     MetricConfig `mapstructure:"oracledb.enqueue_locks.limit"`
	OracledbEnqueueLocksUsage     MetricConfig `mapstructure:"oracledb.enqueue_locks.usage"`
	OracledbEnqueueResourcesLimit MetricConfig `mapstructure:"oracledb.enqueue_resources.limit"`
	OracledbEnqueueResourcesUsage MetricConfig `mapstructure:"oracledb.enqueue_resources.usage"`
	OracledbExchangeDeadlocks     MetricConfig `mapstructure:"oracledb.exchange_deadlocks"`
	OracledbExecutions            MetricConfig `mapstructure:"oracledb.executions"`
	OracledbHardParses            MetricConfig `mapstructure:"oracledb.hard_parses"`
	OracledbLogicalReads          MetricConfig `mapstructure:"oracledb.logical_reads"`
	OracledbParseCalls            MetricConfig `mapstructure:"oracledb.parse_calls"`
	OracledbPgaMemory             MetricConfig `mapstructure:"oracledb.pga_memory"`
	OracledbPhysicalReads         MetricConfig `mapstructure:"oracledb.physical_reads"`
	OracledbProcessesLimit        MetricConfig `mapstructure:"oracledb.processes.limit"`
	OracledbProcessesUsage        MetricConfig `mapstructure:"oracledb.processes.usage"`
	OracledbQueryChildNumber      MetricConfig `mapstructure:"oracledb.query.child_number"`
	OracledbQueryDuration         MetricConfig `mapstructure:"oracledb.query.duration"`
	OracledbQueryID               MetricConfig `mapstructure:"oracledb.query.id"`
	OracledbQueryPlanHash         MetricConfig `mapstructure:"oracledb.query.plan_hash"`
	OracledbQueryPort             MetricConfig `mapstructure:"oracledb.query.port"`
	OracledbQueryProcess          MetricConfig `mapstructure:"oracledb.query.process"`
	OracledbQuerySerialNumber     MetricConfig `mapstructure:"oracledb.query.serial_number"`
	OracledbQuerySid              MetricConfig `mapstructure:"oracledb.query.sid"`
	OracledbSessionsLimit         MetricConfig `mapstructure:"oracledb.sessions.limit"`
	OracledbSessionsUsage         MetricConfig `mapstructure:"oracledb.sessions.usage"`
	OracledbTablespaceSizeLimit   MetricConfig `mapstructure:"oracledb.tablespace_size.limit"`
	OracledbTablespaceSizeUsage   MetricConfig `mapstructure:"oracledb.tablespace_size.usage"`
	OracledbTransactionsLimit     MetricConfig `mapstructure:"oracledb.transactions.limit"`
	OracledbTransactionsUsage     MetricConfig `mapstructure:"oracledb.transactions.usage"`
	OracledbUserCommits           MetricConfig `mapstructure:"oracledb.user_commits"`
	OracledbUserRollbacks         MetricConfig `mapstructure:"oracledb.user_rollbacks"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		OracledbConsistentGets: MetricConfig{
			Enabled: false,
		},
		OracledbCPUTime: MetricConfig{
			Enabled: true,
		},
		OracledbDbBlockGets: MetricConfig{
			Enabled: false,
		},
		OracledbDmlLocksLimit: MetricConfig{
			Enabled: true,
		},
		OracledbDmlLocksUsage: MetricConfig{
			Enabled: true,
		},
		OracledbEnqueueDeadlocks: MetricConfig{
			Enabled: true,
		},
		OracledbEnqueueLocksLimit: MetricConfig{
			Enabled: true,
		},
		OracledbEnqueueLocksUsage: MetricConfig{
			Enabled: true,
		},
		OracledbEnqueueResourcesLimit: MetricConfig{
			Enabled: true,
		},
		OracledbEnqueueResourcesUsage: MetricConfig{
			Enabled: true,
		},
		OracledbExchangeDeadlocks: MetricConfig{
			Enabled: true,
		},
		OracledbExecutions: MetricConfig{
			Enabled: true,
		},
		OracledbHardParses: MetricConfig{
			Enabled: true,
		},
		OracledbLogicalReads: MetricConfig{
			Enabled: true,
		},
		OracledbParseCalls: MetricConfig{
			Enabled: true,
		},
		OracledbPgaMemory: MetricConfig{
			Enabled: true,
		},
		OracledbPhysicalReads: MetricConfig{
			Enabled: true,
		},
		OracledbProcessesLimit: MetricConfig{
			Enabled: true,
		},
		OracledbProcessesUsage: MetricConfig{
			Enabled: true,
		},
		OracledbQueryChildNumber: MetricConfig{
			Enabled: true,
		},
		OracledbQueryDuration: MetricConfig{
			Enabled: true,
		},
		OracledbQueryID: MetricConfig{
			Enabled: true,
		},
		OracledbQueryPlanHash: MetricConfig{
			Enabled: true,
		},
		OracledbQueryPort: MetricConfig{
			Enabled: true,
		},
		OracledbQueryProcess: MetricConfig{
			Enabled: true,
		},
		OracledbQuerySerialNumber: MetricConfig{
			Enabled: true,
		},
		OracledbQuerySid: MetricConfig{
			Enabled: true,
		},
		OracledbSessionsLimit: MetricConfig{
			Enabled: true,
		},
		OracledbSessionsUsage: MetricConfig{
			Enabled: true,
		},
		OracledbTablespaceSizeLimit: MetricConfig{
			Enabled: true,
		},
		OracledbTablespaceSizeUsage: MetricConfig{
			Enabled: true,
		},
		OracledbTransactionsLimit: MetricConfig{
			Enabled: true,
		},
		OracledbTransactionsUsage: MetricConfig{
			Enabled: true,
		},
		OracledbUserCommits: MetricConfig{
			Enabled: true,
		},
		OracledbUserRollbacks: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
	// Experimental: MetricsInclude defines a list of filters for attribute values.
	// If the list is not empty, only metrics with matching resource attribute values will be emitted.
	MetricsInclude []filter.Config `mapstructure:"metrics_include"`
	// Experimental: MetricsExclude defines a list of filters for attribute values.
	// If the list is not empty, metrics with matching resource attribute values will not be emitted.
	// MetricsInclude has higher priority than MetricsExclude.
	MetricsExclude []filter.Config `mapstructure:"metrics_exclude"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for oracledb resource attributes.
type ResourceAttributesConfig struct {
	DbQueryText             ResourceAttributeConfig `mapstructure:"db.query.text"`
	OracledbInstanceName    ResourceAttributeConfig `mapstructure:"oracledb.instance.name"`
	OracledbQueryEvent      ResourceAttributeConfig `mapstructure:"oracledb.query.event"`
	OracledbQueryModule     ResourceAttributeConfig `mapstructure:"oracledb.query.module"`
	OracledbQueryObjectName ResourceAttributeConfig `mapstructure:"oracledb.query.object_name"`
	OracledbQueryObjectType ResourceAttributeConfig `mapstructure:"oracledb.query.object_type"`
	OracledbQueryOsuser     ResourceAttributeConfig `mapstructure:"oracledb.query.osuser"`
	OracledbQueryProgram    ResourceAttributeConfig `mapstructure:"oracledb.query.program"`
	OracledbQueryState      ResourceAttributeConfig `mapstructure:"oracledb.query.state"`
	OracledbQueryStatus     ResourceAttributeConfig `mapstructure:"oracledb.query.status"`
	OracledbQueryWaitClass  ResourceAttributeConfig `mapstructure:"oracledb.query.wait_class"`
	OracledbSchemaname      ResourceAttributeConfig `mapstructure:"oracledb.schemaname"`
	OracledbUsername        ResourceAttributeConfig `mapstructure:"oracledb.username"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		DbQueryText: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbInstanceName: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryEvent: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryModule: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryObjectName: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryObjectType: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryOsuser: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryProgram: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryState: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryStatus: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbQueryWaitClass: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbSchemaname: ResourceAttributeConfig{
			Enabled: true,
		},
		OracledbUsername: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for oracledb metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
