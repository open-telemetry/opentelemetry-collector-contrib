// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for disk metrics.
type MetricsConfig struct {
	SystemDiskIo                MetricConfig `mapstructure:"system.disk.io"`
	SystemDiskIoTime            MetricConfig `mapstructure:"system.disk.io_time"`
	SystemDiskMerged            MetricConfig `mapstructure:"system.disk.merged"`
	SystemDiskOperationTime     MetricConfig `mapstructure:"system.disk.operation_time"`
	SystemDiskOperations        MetricConfig `mapstructure:"system.disk.operations"`
	SystemDiskPendingOperations MetricConfig `mapstructure:"system.disk.pending_operations"`
	SystemDiskWeightedIoTime    MetricConfig `mapstructure:"system.disk.weighted_io_time"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		SystemDiskIo: MetricConfig{
			Enabled: true,
		},
		SystemDiskIoTime: MetricConfig{
			Enabled: true,
		},
		SystemDiskMerged: MetricConfig{
			Enabled: true,
		},
		SystemDiskOperationTime: MetricConfig{
			Enabled: true,
		},
		SystemDiskOperations: MetricConfig{
			Enabled: true,
		},
		SystemDiskPendingOperations: MetricConfig{
			Enabled: true,
		},
		SystemDiskWeightedIoTime: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for disk metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
