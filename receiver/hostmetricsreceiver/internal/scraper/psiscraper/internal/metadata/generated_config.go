// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for psi metrics.
type MetricsConfig struct {
	SystemPsiCPUSomeAvg10     MetricConfig `mapstructure:"system.psi.cpu.some.avg10"`
	SystemPsiCPUSomeAvg300    MetricConfig `mapstructure:"system.psi.cpu.some.avg300"`
	SystemPsiCPUSomeAvg60     MetricConfig `mapstructure:"system.psi.cpu.some.avg60"`
	SystemPsiCPUSomeTotal     MetricConfig `mapstructure:"system.psi.cpu.some.total"`
	SystemPsiIoFullAvg10      MetricConfig `mapstructure:"system.psi.io.full.avg10"`
	SystemPsiIoFullAvg300     MetricConfig `mapstructure:"system.psi.io.full.avg300"`
	SystemPsiIoFullAvg60      MetricConfig `mapstructure:"system.psi.io.full.avg60"`
	SystemPsiIoFullTotal      MetricConfig `mapstructure:"system.psi.io.full.total"`
	SystemPsiIoSomeAvg10      MetricConfig `mapstructure:"system.psi.io.some.avg10"`
	SystemPsiIoSomeAvg300     MetricConfig `mapstructure:"system.psi.io.some.avg300"`
	SystemPsiIoSomeAvg60      MetricConfig `mapstructure:"system.psi.io.some.avg60"`
	SystemPsiIoSomeTotal      MetricConfig `mapstructure:"system.psi.io.some.total"`
	SystemPsiMemoryFullAvg10  MetricConfig `mapstructure:"system.psi.memory.full.avg10"`
	SystemPsiMemoryFullAvg300 MetricConfig `mapstructure:"system.psi.memory.full.avg300"`
	SystemPsiMemoryFullAvg60  MetricConfig `mapstructure:"system.psi.memory.full.avg60"`
	SystemPsiMemoryFullTotal  MetricConfig `mapstructure:"system.psi.memory.full.total"`
	SystemPsiMemorySomeAvg10  MetricConfig `mapstructure:"system.psi.memory.some.avg10"`
	SystemPsiMemorySomeAvg300 MetricConfig `mapstructure:"system.psi.memory.some.avg300"`
	SystemPsiMemorySomeAvg60  MetricConfig `mapstructure:"system.psi.memory.some.avg60"`
	SystemPsiMemorySomeTotal  MetricConfig `mapstructure:"system.psi.memory.some.total"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		SystemPsiCPUSomeAvg10: MetricConfig{
			Enabled: true,
		},
		SystemPsiCPUSomeAvg300: MetricConfig{
			Enabled: true,
		},
		SystemPsiCPUSomeAvg60: MetricConfig{
			Enabled: true,
		},
		SystemPsiCPUSomeTotal: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoFullAvg10: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoFullAvg300: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoFullAvg60: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoFullTotal: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoSomeAvg10: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoSomeAvg300: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoSomeAvg60: MetricConfig{
			Enabled: true,
		},
		SystemPsiIoSomeTotal: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemoryFullAvg10: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemoryFullAvg300: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemoryFullAvg60: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemoryFullTotal: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemorySomeAvg10: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemorySomeAvg300: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemorySomeAvg60: MetricConfig{
			Enabled: true,
		},
		SystemPsiMemorySomeTotal: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for psi metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
