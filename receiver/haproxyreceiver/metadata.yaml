type: haproxy

status:
  class: receiver
  stability:
    beta: [metrics]
  distributions: [contrib]
  codeowners:
    active: [atoulme, MovieStoreGuy]

resource_attributes:
  haproxy.addr:
    description: address:port or "unix". IPv6 has brackets around the address.
    enabled: true
    type: string
  haproxy.proxy_name:
    description: Proxy name
    enabled: true
    type: string
  haproxy.service_name:
    description: Service name (FRONTEND for frontend, BACKEND for backend, any name for server/listener)
    enabled: true
    type: string

attributes:
  status_code:
    description: Status code category, 1xx, 2xx, 3xx, 4xx, 5xx or other
    type: string
    enum:
      - "1xx"
      - "2xx"
      - "3xx"
      - "4xx"
      - "5xx"
      - "other"


metrics:
  haproxy.connections.rate:
    description: Number of connections over the last elapsed second (frontend). Corresponds to HAProxy's `conn_rate` metric.
    enabled: true
    gauge:
      value_type: int
      input_type: string
    unit: "{connections}"
  haproxy.sessions.count:
    description: Current sessions. Corresponds to HAProxy's `scur` metric.
    enabled: true
    gauge:
      value_type: int
      input_type: string
    unit: "{sessions}"
  haproxy.connections.total:
    description: Cumulative number of connections (frontend). Corresponds to HAProxy's `conn_tot` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{connections}"
  haproxy.server_selected.total:
    description: Number of times a server was selected, either for new sessions or when re-dispatching. Corresponds to HAProxy's `lbtot` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{selections}"
  haproxy.bytes.input:
    description: Bytes in. Corresponds to HAProxy's `bin` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: by
  haproxy.bytes.output:
    description: Bytes out. Corresponds to HAProxy's `bout` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: by
  haproxy.clients.canceled:
    description: Number of data transfers aborted by the client. Corresponds to HAProxy's `cli_abrt` metric
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{cancellations}"
  haproxy.compression.bypass:
    description: Number of bytes that bypassed the HTTP compressor (CPU/BW limit). Corresponds to HAProxy's `comp_byp` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: by
  haproxy.compression.input:
    description: Number of HTTP response bytes fed to the compressor. Corresponds to HAProxy's `comp_in` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: by
  haproxy.compression.output:
    description: Number of HTTP response bytes emitted by the compressor. Corresponds to HAProxy's `comp_out` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: by
  haproxy.compression.count:
    description: Number of HTTP responses that were compressed. Corresponds to HAProxy's `comp_rsp` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{responses}"
  haproxy.requests.denied:
    description: Requests denied because of security concerns. Corresponds to HAProxy's `dreq` metric
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{requests}"
  haproxy.responses.denied:
    description: Responses denied because of security concerns. Corresponds to HAProxy's `dresp` metric
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{responses}"
  haproxy.downtime:
    description:  Total downtime (in seconds). The value for the backend is the downtime for the whole backend, not the sum of the server downtime. Corresponds to HAProxy's `downtime` metric
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: s
  haproxy.connections.errors:
    description: Number of requests that encountered an error trying to connect to a backend server. The backend stat is the sum of the stat. Corresponds to HAProxy's `econ` metric
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{errors}"
  haproxy.requests.errors:
    description: Cumulative number of request errors. Corresponds to HAProxy's `ereq` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{errors}"
  haproxy.responses.errors:
    description: Cumulative number of response errors. Corresponds to HAProxy's `eresp` metric, `srv_abrt` will be counted here also.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
    unit: "{errors}"
  haproxy.failed_checks:
    description: Number of failed checks. (Only counts checks failed when the server is up). Corresponds to HAProxy's `chkfail` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{checks}"
  haproxy.requests.redispatched:
    description: Number of times a request was redispatched to another server. Corresponds to HAProxy's `wredis` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{requests}"
  haproxy.requests.total:
    description: Total number of HTTP requests received. Corresponds to HAProxy's `req_tot`, `hrsp_1xx`, `hrsp_2xx`, `hrsp_3xx`, `hrsp_4xx`, `hrsp_5xx` and `hrsp_other` metrics.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{requests}"
    attributes:
      - status_code
  haproxy.connections.retries:
    description: Number of times a connection to a server was retried. Corresponds to HAProxy's `wretr` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{retries}"
  haproxy.sessions.total:
    description: Cumulative number of sessions. Corresponds to HAProxy's `stot` metric.
    enabled: false
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{sessions}"
  haproxy.requests.queued:
    description: Current queued requests. For the backend this reports the number queued without a server assigned. Corresponds to HAProxy's `qcur` metric.
    enabled: true
    sum:
      aggregation_temporality: cumulative
      monotonic: true
      value_type: int
      input_type: string
    unit: "{requests}"
  haproxy.requests.rate:
    description: HTTP requests per second over last elapsed second. Corresponds to HAProxy's `req_rate` metric.
    enabled: true
    gauge:
      value_type: double
      input_type: string
    unit: "{requests}"
  haproxy.sessions.average:
    description: Average total session time in ms over the last 1024 requests. Corresponds to HAProxy's `ttime` metric.
    enabled: true
    gauge:
      value_type: double
      input_type: string
    unit: ms
  haproxy.sessions.rate:
    description: Number of sessions per second over last elapsed second. Corresponds to HAProxy's `rate` metric.
    enabled: true
    gauge:
      value_type: double
      input_type: string
    unit: "{sessions}"
