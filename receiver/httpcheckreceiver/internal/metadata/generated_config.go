// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for httpcheck metrics.
type MetricsConfig struct {
	HttpcheckClientConnectionDuration MetricConfig `mapstructure:"httpcheck.client.connection.duration"`
	HttpcheckClientRequestDuration    MetricConfig `mapstructure:"httpcheck.client.request.duration"`
	HttpcheckDNSLookupDuration        MetricConfig `mapstructure:"httpcheck.dns.lookup.duration"`
	HttpcheckDuration                 MetricConfig `mapstructure:"httpcheck.duration"`
	HttpcheckError                    MetricConfig `mapstructure:"httpcheck.error"`
	HttpcheckResponseDuration         MetricConfig `mapstructure:"httpcheck.response.duration"`
	HttpcheckStatus                   MetricConfig `mapstructure:"httpcheck.status"`
	HttpcheckTLSCertRemaining         MetricConfig `mapstructure:"httpcheck.tls.cert_remaining"`
	HttpcheckTLSHandshakeDuration     MetricConfig `mapstructure:"httpcheck.tls.handshake.duration"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		HttpcheckClientConnectionDuration: MetricConfig{
			Enabled: false,
		},
		HttpcheckClientRequestDuration: MetricConfig{
			Enabled: false,
		},
		HttpcheckDNSLookupDuration: MetricConfig{
			Enabled: false,
		},
		HttpcheckDuration: MetricConfig{
			Enabled: true,
		},
		HttpcheckError: MetricConfig{
			Enabled: true,
		},
		HttpcheckResponseDuration: MetricConfig{
			Enabled: false,
		},
		HttpcheckStatus: MetricConfig{
			Enabled: true,
		},
		HttpcheckTLSCertRemaining: MetricConfig{
			Enabled: false,
		},
		HttpcheckTLSHandshakeDuration: MetricConfig{
			Enabled: false,
		},
	}
}

// MetricsBuilderConfig is a configuration for httpcheck metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
