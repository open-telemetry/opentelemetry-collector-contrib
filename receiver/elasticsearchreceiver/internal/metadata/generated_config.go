// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/filter"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for elasticsearch metrics.
type MetricsConfig struct {
	ElasticsearchBreakerMemoryEstimated                       MetricConfig `mapstructure:"elasticsearch.breaker.memory.estimated"`
	ElasticsearchBreakerMemoryLimit                           MetricConfig `mapstructure:"elasticsearch.breaker.memory.limit"`
	ElasticsearchBreakerTripped                               MetricConfig `mapstructure:"elasticsearch.breaker.tripped"`
	ElasticsearchClusterDataNodes                             MetricConfig `mapstructure:"elasticsearch.cluster.data_nodes"`
	ElasticsearchClusterHealth                                MetricConfig `mapstructure:"elasticsearch.cluster.health"`
	ElasticsearchClusterInFlightFetch                         MetricConfig `mapstructure:"elasticsearch.cluster.in_flight_fetch"`
	ElasticsearchClusterIndicesCacheEvictions                 MetricConfig `mapstructure:"elasticsearch.cluster.indices.cache.evictions"`
	ElasticsearchClusterNodes                                 MetricConfig `mapstructure:"elasticsearch.cluster.nodes"`
	ElasticsearchClusterPendingTasks                          MetricConfig `mapstructure:"elasticsearch.cluster.pending_tasks"`
	ElasticsearchClusterPublishedStatesDifferences            MetricConfig `mapstructure:"elasticsearch.cluster.published_states.differences"`
	ElasticsearchClusterPublishedStatesFull                   MetricConfig `mapstructure:"elasticsearch.cluster.published_states.full"`
	ElasticsearchClusterShards                                MetricConfig `mapstructure:"elasticsearch.cluster.shards"`
	ElasticsearchClusterStateQueue                            MetricConfig `mapstructure:"elasticsearch.cluster.state_queue"`
	ElasticsearchClusterStateUpdateCount                      MetricConfig `mapstructure:"elasticsearch.cluster.state_update.count"`
	ElasticsearchClusterStateUpdateTime                       MetricConfig `mapstructure:"elasticsearch.cluster.state_update.time"`
	ElasticsearchIndexCacheEvictions                          MetricConfig `mapstructure:"elasticsearch.index.cache.evictions"`
	ElasticsearchIndexCacheMemoryUsage                        MetricConfig `mapstructure:"elasticsearch.index.cache.memory.usage"`
	ElasticsearchIndexCacheSize                               MetricConfig `mapstructure:"elasticsearch.index.cache.size"`
	ElasticsearchIndexDocuments                               MetricConfig `mapstructure:"elasticsearch.index.documents"`
	ElasticsearchIndexOperationsCompleted                     MetricConfig `mapstructure:"elasticsearch.index.operations.completed"`
	ElasticsearchIndexOperationsMergeCurrent                  MetricConfig `mapstructure:"elasticsearch.index.operations.merge.current"`
	ElasticsearchIndexOperationsMergeDocsCount                MetricConfig `mapstructure:"elasticsearch.index.operations.merge.docs_count"`
	ElasticsearchIndexOperationsMergeSize                     MetricConfig `mapstructure:"elasticsearch.index.operations.merge.size"`
	ElasticsearchIndexOperationsTime                          MetricConfig `mapstructure:"elasticsearch.index.operations.time"`
	ElasticsearchIndexSegmentsCount                           MetricConfig `mapstructure:"elasticsearch.index.segments.count"`
	ElasticsearchIndexSegmentsMemory                          MetricConfig `mapstructure:"elasticsearch.index.segments.memory"`
	ElasticsearchIndexSegmentsSize                            MetricConfig `mapstructure:"elasticsearch.index.segments.size"`
	ElasticsearchIndexShardsSize                              MetricConfig `mapstructure:"elasticsearch.index.shards.size"`
	ElasticsearchIndexTranslogOperations                      MetricConfig `mapstructure:"elasticsearch.index.translog.operations"`
	ElasticsearchIndexTranslogSize                            MetricConfig `mapstructure:"elasticsearch.index.translog.size"`
	ElasticsearchIndexingPressureMemoryLimit                  MetricConfig `mapstructure:"elasticsearch.indexing_pressure.memory.limit"`
	ElasticsearchIndexingPressureMemoryTotalPrimaryRejections MetricConfig `mapstructure:"elasticsearch.indexing_pressure.memory.total.primary_rejections"`
	ElasticsearchIndexingPressureMemoryTotalReplicaRejections MetricConfig `mapstructure:"elasticsearch.indexing_pressure.memory.total.replica_rejections"`
	ElasticsearchMemoryIndexingPressure                       MetricConfig `mapstructure:"elasticsearch.memory.indexing_pressure"`
	ElasticsearchNodeCacheCount                               MetricConfig `mapstructure:"elasticsearch.node.cache.count"`
	ElasticsearchNodeCacheEvictions                           MetricConfig `mapstructure:"elasticsearch.node.cache.evictions"`
	ElasticsearchNodeCacheMemoryUsage                         MetricConfig `mapstructure:"elasticsearch.node.cache.memory.usage"`
	ElasticsearchNodeCacheSize                                MetricConfig `mapstructure:"elasticsearch.node.cache.size"`
	ElasticsearchNodeClusterConnections                       MetricConfig `mapstructure:"elasticsearch.node.cluster.connections"`
	ElasticsearchNodeClusterIo                                MetricConfig `mapstructure:"elasticsearch.node.cluster.io"`
	ElasticsearchNodeDiskIoRead                               MetricConfig `mapstructure:"elasticsearch.node.disk.io.read"`
	ElasticsearchNodeDiskIoWrite                              MetricConfig `mapstructure:"elasticsearch.node.disk.io.write"`
	ElasticsearchNodeDocuments                                MetricConfig `mapstructure:"elasticsearch.node.documents"`
	ElasticsearchNodeFsDiskAvailable                          MetricConfig `mapstructure:"elasticsearch.node.fs.disk.available"`
	ElasticsearchNodeFsDiskFree                               MetricConfig `mapstructure:"elasticsearch.node.fs.disk.free"`
	ElasticsearchNodeFsDiskTotal                              MetricConfig `mapstructure:"elasticsearch.node.fs.disk.total"`
	ElasticsearchNodeHTTPConnections                          MetricConfig `mapstructure:"elasticsearch.node.http.connections"`
	ElasticsearchNodeIngestDocuments                          MetricConfig `mapstructure:"elasticsearch.node.ingest.documents"`
	ElasticsearchNodeIngestDocumentsCurrent                   MetricConfig `mapstructure:"elasticsearch.node.ingest.documents.current"`
	ElasticsearchNodeIngestOperationsFailed                   MetricConfig `mapstructure:"elasticsearch.node.ingest.operations.failed"`
	ElasticsearchNodeOpenFiles                                MetricConfig `mapstructure:"elasticsearch.node.open_files"`
	ElasticsearchNodeOperationsCompleted                      MetricConfig `mapstructure:"elasticsearch.node.operations.completed"`
	ElasticsearchNodeOperationsCurrent                        MetricConfig `mapstructure:"elasticsearch.node.operations.current"`
	ElasticsearchNodeOperationsGetCompleted                   MetricConfig `mapstructure:"elasticsearch.node.operations.get.completed"`
	ElasticsearchNodeOperationsGetTime                        MetricConfig `mapstructure:"elasticsearch.node.operations.get.time"`
	ElasticsearchNodeOperationsTime                           MetricConfig `mapstructure:"elasticsearch.node.operations.time"`
	ElasticsearchNodePipelineIngestDocumentsCurrent           MetricConfig `mapstructure:"elasticsearch.node.pipeline.ingest.documents.current"`
	ElasticsearchNodePipelineIngestDocumentsPreprocessed      MetricConfig `mapstructure:"elasticsearch.node.pipeline.ingest.documents.preprocessed"`
	ElasticsearchNodePipelineIngestOperationsFailed           MetricConfig `mapstructure:"elasticsearch.node.pipeline.ingest.operations.failed"`
	ElasticsearchNodeScriptCacheEvictions                     MetricConfig `mapstructure:"elasticsearch.node.script.cache_evictions"`
	ElasticsearchNodeScriptCompilationLimitTriggered          MetricConfig `mapstructure:"elasticsearch.node.script.compilation_limit_triggered"`
	ElasticsearchNodeScriptCompilations                       MetricConfig `mapstructure:"elasticsearch.node.script.compilations"`
	ElasticsearchNodeSegmentsMemory                           MetricConfig `mapstructure:"elasticsearch.node.segments.memory"`
	ElasticsearchNodeShardsDataSetSize                        MetricConfig `mapstructure:"elasticsearch.node.shards.data_set.size"`
	ElasticsearchNodeShardsReservedSize                       MetricConfig `mapstructure:"elasticsearch.node.shards.reserved.size"`
	ElasticsearchNodeShardsSize                               MetricConfig `mapstructure:"elasticsearch.node.shards.size"`
	ElasticsearchNodeThreadPoolTasksFinished                  MetricConfig `mapstructure:"elasticsearch.node.thread_pool.tasks.finished"`
	ElasticsearchNodeThreadPoolTasksQueued                    MetricConfig `mapstructure:"elasticsearch.node.thread_pool.tasks.queued"`
	ElasticsearchNodeThreadPoolThreads                        MetricConfig `mapstructure:"elasticsearch.node.thread_pool.threads"`
	ElasticsearchNodeTranslogOperations                       MetricConfig `mapstructure:"elasticsearch.node.translog.operations"`
	ElasticsearchNodeTranslogSize                             MetricConfig `mapstructure:"elasticsearch.node.translog.size"`
	ElasticsearchNodeTranslogUncommittedSize                  MetricConfig `mapstructure:"elasticsearch.node.translog.uncommitted.size"`
	ElasticsearchOsCPULoadAvg15m                              MetricConfig `mapstructure:"elasticsearch.os.cpu.load_avg.15m"`
	ElasticsearchOsCPULoadAvg1m                               MetricConfig `mapstructure:"elasticsearch.os.cpu.load_avg.1m"`
	ElasticsearchOsCPULoadAvg5m                               MetricConfig `mapstructure:"elasticsearch.os.cpu.load_avg.5m"`
	ElasticsearchOsCPUUsage                                   MetricConfig `mapstructure:"elasticsearch.os.cpu.usage"`
	ElasticsearchOsMemory                                     MetricConfig `mapstructure:"elasticsearch.os.memory"`
	ElasticsearchProcessCPUTime                               MetricConfig `mapstructure:"elasticsearch.process.cpu.time"`
	ElasticsearchProcessCPUUsage                              MetricConfig `mapstructure:"elasticsearch.process.cpu.usage"`
	ElasticsearchProcessMemoryVirtual                         MetricConfig `mapstructure:"elasticsearch.process.memory.virtual"`
	JvmClassesLoaded                                          MetricConfig `mapstructure:"jvm.classes.loaded"`
	JvmGcCollectionsCount                                     MetricConfig `mapstructure:"jvm.gc.collections.count"`
	JvmGcCollectionsElapsed                                   MetricConfig `mapstructure:"jvm.gc.collections.elapsed"`
	JvmMemoryHeapCommitted                                    MetricConfig `mapstructure:"jvm.memory.heap.committed"`
	JvmMemoryHeapMax                                          MetricConfig `mapstructure:"jvm.memory.heap.max"`
	JvmMemoryHeapUsed                                         MetricConfig `mapstructure:"jvm.memory.heap.used"`
	JvmMemoryHeapUtilization                                  MetricConfig `mapstructure:"jvm.memory.heap.utilization"`
	JvmMemoryNonheapCommitted                                 MetricConfig `mapstructure:"jvm.memory.nonheap.committed"`
	JvmMemoryNonheapUsed                                      MetricConfig `mapstructure:"jvm.memory.nonheap.used"`
	JvmMemoryPoolMax                                          MetricConfig `mapstructure:"jvm.memory.pool.max"`
	JvmMemoryPoolUsed                                         MetricConfig `mapstructure:"jvm.memory.pool.used"`
	JvmThreadsCount                                           MetricConfig `mapstructure:"jvm.threads.count"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		ElasticsearchBreakerMemoryEstimated: MetricConfig{
			Enabled: true,
		},
		ElasticsearchBreakerMemoryLimit: MetricConfig{
			Enabled: true,
		},
		ElasticsearchBreakerTripped: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterDataNodes: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterHealth: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterInFlightFetch: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterIndicesCacheEvictions: MetricConfig{
			Enabled: false,
		},
		ElasticsearchClusterNodes: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterPendingTasks: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterPublishedStatesDifferences: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterPublishedStatesFull: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterShards: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterStateQueue: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterStateUpdateCount: MetricConfig{
			Enabled: true,
		},
		ElasticsearchClusterStateUpdateTime: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexCacheEvictions: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexCacheMemoryUsage: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexCacheSize: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexDocuments: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexOperationsCompleted: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexOperationsMergeCurrent: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexOperationsMergeDocsCount: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexOperationsMergeSize: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexOperationsTime: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexSegmentsCount: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexSegmentsMemory: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexSegmentsSize: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexShardsSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexTranslogOperations: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexTranslogSize: MetricConfig{
			Enabled: false,
		},
		ElasticsearchIndexingPressureMemoryLimit: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexingPressureMemoryTotalPrimaryRejections: MetricConfig{
			Enabled: true,
		},
		ElasticsearchIndexingPressureMemoryTotalReplicaRejections: MetricConfig{
			Enabled: true,
		},
		ElasticsearchMemoryIndexingPressure: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeCacheCount: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeCacheEvictions: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeCacheMemoryUsage: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeCacheSize: MetricConfig{
			Enabled: false,
		},
		ElasticsearchNodeClusterConnections: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeClusterIo: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeDiskIoRead: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeDiskIoWrite: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeDocuments: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeFsDiskAvailable: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeFsDiskFree: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeFsDiskTotal: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeHTTPConnections: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeIngestDocuments: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeIngestDocumentsCurrent: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeIngestOperationsFailed: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeOpenFiles: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeOperationsCompleted: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeOperationsCurrent: MetricConfig{
			Enabled: false,
		},
		ElasticsearchNodeOperationsGetCompleted: MetricConfig{
			Enabled: false,
		},
		ElasticsearchNodeOperationsGetTime: MetricConfig{
			Enabled: false,
		},
		ElasticsearchNodeOperationsTime: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodePipelineIngestDocumentsCurrent: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodePipelineIngestDocumentsPreprocessed: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodePipelineIngestOperationsFailed: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeScriptCacheEvictions: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeScriptCompilationLimitTriggered: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeScriptCompilations: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeSegmentsMemory: MetricConfig{
			Enabled: false,
		},
		ElasticsearchNodeShardsDataSetSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeShardsReservedSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeShardsSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeThreadPoolTasksFinished: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeThreadPoolTasksQueued: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeThreadPoolThreads: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeTranslogOperations: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeTranslogSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchNodeTranslogUncommittedSize: MetricConfig{
			Enabled: true,
		},
		ElasticsearchOsCPULoadAvg15m: MetricConfig{
			Enabled: true,
		},
		ElasticsearchOsCPULoadAvg1m: MetricConfig{
			Enabled: true,
		},
		ElasticsearchOsCPULoadAvg5m: MetricConfig{
			Enabled: true,
		},
		ElasticsearchOsCPUUsage: MetricConfig{
			Enabled: true,
		},
		ElasticsearchOsMemory: MetricConfig{
			Enabled: true,
		},
		ElasticsearchProcessCPUTime: MetricConfig{
			Enabled: false,
		},
		ElasticsearchProcessCPUUsage: MetricConfig{
			Enabled: false,
		},
		ElasticsearchProcessMemoryVirtual: MetricConfig{
			Enabled: false,
		},
		JvmClassesLoaded: MetricConfig{
			Enabled: true,
		},
		JvmGcCollectionsCount: MetricConfig{
			Enabled: true,
		},
		JvmGcCollectionsElapsed: MetricConfig{
			Enabled: true,
		},
		JvmMemoryHeapCommitted: MetricConfig{
			Enabled: true,
		},
		JvmMemoryHeapMax: MetricConfig{
			Enabled: true,
		},
		JvmMemoryHeapUsed: MetricConfig{
			Enabled: true,
		},
		JvmMemoryHeapUtilization: MetricConfig{
			Enabled: false,
		},
		JvmMemoryNonheapCommitted: MetricConfig{
			Enabled: true,
		},
		JvmMemoryNonheapUsed: MetricConfig{
			Enabled: true,
		},
		JvmMemoryPoolMax: MetricConfig{
			Enabled: true,
		},
		JvmMemoryPoolUsed: MetricConfig{
			Enabled: true,
		},
		JvmThreadsCount: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
	// Experimental: MetricsInclude defines a list of filters for attribute values.
	// If the list is not empty, only metrics with matching resource attribute values will be emitted.
	MetricsInclude []filter.Config `mapstructure:"metrics_include"`
	// Experimental: MetricsExclude defines a list of filters for attribute values.
	// If the list is not empty, metrics with matching resource attribute values will not be emitted.
	// MetricsInclude has higher priority than MetricsExclude.
	MetricsExclude []filter.Config `mapstructure:"metrics_exclude"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for elasticsearch resource attributes.
type ResourceAttributesConfig struct {
	ElasticsearchClusterName ResourceAttributeConfig `mapstructure:"elasticsearch.cluster.name"`
	ElasticsearchIndexName   ResourceAttributeConfig `mapstructure:"elasticsearch.index.name"`
	ElasticsearchNodeName    ResourceAttributeConfig `mapstructure:"elasticsearch.node.name"`
	ElasticsearchNodeVersion ResourceAttributeConfig `mapstructure:"elasticsearch.node.version"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		ElasticsearchClusterName: ResourceAttributeConfig{
			Enabled: true,
		},
		ElasticsearchIndexName: ResourceAttributeConfig{
			Enabled: true,
		},
		ElasticsearchNodeName: ResourceAttributeConfig{
			Enabled: true,
		},
		ElasticsearchNodeVersion: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for elasticsearch metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
