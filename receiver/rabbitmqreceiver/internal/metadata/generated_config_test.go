// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/stretchr/testify/require"
	"go.opentelemetry.io/collector/confmap/confmaptest"
)

func TestMetricsBuilderConfig(t *testing.T) {
	tests := []struct {
		name string
		want MetricsBuilderConfig
	}{
		{
			name: "default",
			want: DefaultMetricsBuilderConfig(),
		},
		{
			name: "all_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					RabbitmqConsumerCount:                       MetricConfig{Enabled: true},
					RabbitmqMessageAcknowledged:                 MetricConfig{Enabled: true},
					RabbitmqMessageCurrent:                      MetricConfig{Enabled: true},
					RabbitmqMessageDelivered:                    MetricConfig{Enabled: true},
					RabbitmqMessageDropped:                      MetricConfig{Enabled: true},
					RabbitmqMessagePublished:                    MetricConfig{Enabled: true},
					RabbitmqNodeChannelClosed:                   MetricConfig{Enabled: true},
					RabbitmqNodeChannelClosedDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeChannelCreated:                  MetricConfig{Enabled: true},
					RabbitmqNodeChannelCreatedDetailsRate:       MetricConfig{Enabled: true},
					RabbitmqNodeConnectionClosed:                MetricConfig{Enabled: true},
					RabbitmqNodeConnectionClosedDetailsRate:     MetricConfig{Enabled: true},
					RabbitmqNodeConnectionCreated:               MetricConfig{Enabled: true},
					RabbitmqNodeConnectionCreatedDetailsRate:    MetricConfig{Enabled: true},
					RabbitmqNodeContextSwitches:                 MetricConfig{Enabled: true},
					RabbitmqNodeContextSwitchesDetailsRate:      MetricConfig{Enabled: true},
					RabbitmqNodeDiskFree:                        MetricConfig{Enabled: true},
					RabbitmqNodeDiskFreeAlarm:                   MetricConfig{Enabled: true},
					RabbitmqNodeDiskFreeDetailsRate:             MetricConfig{Enabled: true},
					RabbitmqNodeDiskFreeLimit:                   MetricConfig{Enabled: true},
					RabbitmqNodeFdTotal:                         MetricConfig{Enabled: true},
					RabbitmqNodeFdUsed:                          MetricConfig{Enabled: true},
					RabbitmqNodeFdUsedDetailsRate:               MetricConfig{Enabled: true},
					RabbitmqNodeGcBytesReclaimed:                MetricConfig{Enabled: true},
					RabbitmqNodeGcBytesReclaimedDetailsRate:     MetricConfig{Enabled: true},
					RabbitmqNodeGcNum:                           MetricConfig{Enabled: true},
					RabbitmqNodeGcNumDetailsRate:                MetricConfig{Enabled: true},
					RabbitmqNodeIoReadAvgTime:                   MetricConfig{Enabled: true},
					RabbitmqNodeIoReadAvgTimeDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeIoReadBytes:                     MetricConfig{Enabled: true},
					RabbitmqNodeIoReadBytesDetailsRate:          MetricConfig{Enabled: true},
					RabbitmqNodeIoReadCount:                     MetricConfig{Enabled: true},
					RabbitmqNodeIoReadCountDetailsRate:          MetricConfig{Enabled: true},
					RabbitmqNodeIoReopenCount:                   MetricConfig{Enabled: true},
					RabbitmqNodeIoReopenCountDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeIoSeekAvgTime:                   MetricConfig{Enabled: true},
					RabbitmqNodeIoSeekAvgTimeDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeIoSeekCount:                     MetricConfig{Enabled: true},
					RabbitmqNodeIoSeekCountDetailsRate:          MetricConfig{Enabled: true},
					RabbitmqNodeIoSyncAvgTime:                   MetricConfig{Enabled: true},
					RabbitmqNodeIoSyncAvgTimeDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeIoSyncCount:                     MetricConfig{Enabled: true},
					RabbitmqNodeIoSyncCountDetailsRate:          MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteAvgTime:                  MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteAvgTimeDetailsRate:       MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteBytes:                    MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteBytesDetailsRate:         MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteCount:                    MetricConfig{Enabled: true},
					RabbitmqNodeIoWriteCountDetailsRate:         MetricConfig{Enabled: true},
					RabbitmqNodeMemAlarm:                        MetricConfig{Enabled: true},
					RabbitmqNodeMemLimit:                        MetricConfig{Enabled: true},
					RabbitmqNodeMemUsed:                         MetricConfig{Enabled: true},
					RabbitmqNodeMemUsedDetailsRate:              MetricConfig{Enabled: true},
					RabbitmqNodeMnesiaDiskTxCount:               MetricConfig{Enabled: true},
					RabbitmqNodeMnesiaDiskTxCountDetailsRate:    MetricConfig{Enabled: true},
					RabbitmqNodeMnesiaRAMTxCount:                MetricConfig{Enabled: true},
					RabbitmqNodeMnesiaRAMTxCountDetailsRate:     MetricConfig{Enabled: true},
					RabbitmqNodeMsgStoreReadCount:               MetricConfig{Enabled: true},
					RabbitmqNodeMsgStoreReadCountDetailsRate:    MetricConfig{Enabled: true},
					RabbitmqNodeMsgStoreWriteCount:              MetricConfig{Enabled: true},
					RabbitmqNodeMsgStoreWriteCountDetailsRate:   MetricConfig{Enabled: true},
					RabbitmqNodeProcTotal:                       MetricConfig{Enabled: true},
					RabbitmqNodeProcUsed:                        MetricConfig{Enabled: true},
					RabbitmqNodeProcUsedDetailsRate:             MetricConfig{Enabled: true},
					RabbitmqNodeProcessors:                      MetricConfig{Enabled: true},
					RabbitmqNodeQueueCreated:                    MetricConfig{Enabled: true},
					RabbitmqNodeQueueCreatedDetailsRate:         MetricConfig{Enabled: true},
					RabbitmqNodeQueueDeclared:                   MetricConfig{Enabled: true},
					RabbitmqNodeQueueDeclaredDetailsRate:        MetricConfig{Enabled: true},
					RabbitmqNodeQueueDeleted:                    MetricConfig{Enabled: true},
					RabbitmqNodeQueueDeletedDetailsRate:         MetricConfig{Enabled: true},
					RabbitmqNodeQueueIndexReadCount:             MetricConfig{Enabled: true},
					RabbitmqNodeQueueIndexReadCountDetailsRate:  MetricConfig{Enabled: true},
					RabbitmqNodeQueueIndexWriteCount:            MetricConfig{Enabled: true},
					RabbitmqNodeQueueIndexWriteCountDetailsRate: MetricConfig{Enabled: true},
					RabbitmqNodeRunQueue:                        MetricConfig{Enabled: true},
					RabbitmqNodeSocketsTotal:                    MetricConfig{Enabled: true},
					RabbitmqNodeSocketsUsed:                     MetricConfig{Enabled: true},
					RabbitmqNodeSocketsUsedDetailsRate:          MetricConfig{Enabled: true},
					RabbitmqNodeUptime:                          MetricConfig{Enabled: true},
				},
				ResourceAttributes: ResourceAttributesConfig{
					RabbitmqNodeName:  ResourceAttributeConfig{Enabled: true},
					RabbitmqQueueName: ResourceAttributeConfig{Enabled: true},
					RabbitmqVhostName: ResourceAttributeConfig{Enabled: true},
				},
			},
		},
		{
			name: "none_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					RabbitmqConsumerCount:                       MetricConfig{Enabled: false},
					RabbitmqMessageAcknowledged:                 MetricConfig{Enabled: false},
					RabbitmqMessageCurrent:                      MetricConfig{Enabled: false},
					RabbitmqMessageDelivered:                    MetricConfig{Enabled: false},
					RabbitmqMessageDropped:                      MetricConfig{Enabled: false},
					RabbitmqMessagePublished:                    MetricConfig{Enabled: false},
					RabbitmqNodeChannelClosed:                   MetricConfig{Enabled: false},
					RabbitmqNodeChannelClosedDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeChannelCreated:                  MetricConfig{Enabled: false},
					RabbitmqNodeChannelCreatedDetailsRate:       MetricConfig{Enabled: false},
					RabbitmqNodeConnectionClosed:                MetricConfig{Enabled: false},
					RabbitmqNodeConnectionClosedDetailsRate:     MetricConfig{Enabled: false},
					RabbitmqNodeConnectionCreated:               MetricConfig{Enabled: false},
					RabbitmqNodeConnectionCreatedDetailsRate:    MetricConfig{Enabled: false},
					RabbitmqNodeContextSwitches:                 MetricConfig{Enabled: false},
					RabbitmqNodeContextSwitchesDetailsRate:      MetricConfig{Enabled: false},
					RabbitmqNodeDiskFree:                        MetricConfig{Enabled: false},
					RabbitmqNodeDiskFreeAlarm:                   MetricConfig{Enabled: false},
					RabbitmqNodeDiskFreeDetailsRate:             MetricConfig{Enabled: false},
					RabbitmqNodeDiskFreeLimit:                   MetricConfig{Enabled: false},
					RabbitmqNodeFdTotal:                         MetricConfig{Enabled: false},
					RabbitmqNodeFdUsed:                          MetricConfig{Enabled: false},
					RabbitmqNodeFdUsedDetailsRate:               MetricConfig{Enabled: false},
					RabbitmqNodeGcBytesReclaimed:                MetricConfig{Enabled: false},
					RabbitmqNodeGcBytesReclaimedDetailsRate:     MetricConfig{Enabled: false},
					RabbitmqNodeGcNum:                           MetricConfig{Enabled: false},
					RabbitmqNodeGcNumDetailsRate:                MetricConfig{Enabled: false},
					RabbitmqNodeIoReadAvgTime:                   MetricConfig{Enabled: false},
					RabbitmqNodeIoReadAvgTimeDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeIoReadBytes:                     MetricConfig{Enabled: false},
					RabbitmqNodeIoReadBytesDetailsRate:          MetricConfig{Enabled: false},
					RabbitmqNodeIoReadCount:                     MetricConfig{Enabled: false},
					RabbitmqNodeIoReadCountDetailsRate:          MetricConfig{Enabled: false},
					RabbitmqNodeIoReopenCount:                   MetricConfig{Enabled: false},
					RabbitmqNodeIoReopenCountDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeIoSeekAvgTime:                   MetricConfig{Enabled: false},
					RabbitmqNodeIoSeekAvgTimeDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeIoSeekCount:                     MetricConfig{Enabled: false},
					RabbitmqNodeIoSeekCountDetailsRate:          MetricConfig{Enabled: false},
					RabbitmqNodeIoSyncAvgTime:                   MetricConfig{Enabled: false},
					RabbitmqNodeIoSyncAvgTimeDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeIoSyncCount:                     MetricConfig{Enabled: false},
					RabbitmqNodeIoSyncCountDetailsRate:          MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteAvgTime:                  MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteAvgTimeDetailsRate:       MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteBytes:                    MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteBytesDetailsRate:         MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteCount:                    MetricConfig{Enabled: false},
					RabbitmqNodeIoWriteCountDetailsRate:         MetricConfig{Enabled: false},
					RabbitmqNodeMemAlarm:                        MetricConfig{Enabled: false},
					RabbitmqNodeMemLimit:                        MetricConfig{Enabled: false},
					RabbitmqNodeMemUsed:                         MetricConfig{Enabled: false},
					RabbitmqNodeMemUsedDetailsRate:              MetricConfig{Enabled: false},
					RabbitmqNodeMnesiaDiskTxCount:               MetricConfig{Enabled: false},
					RabbitmqNodeMnesiaDiskTxCountDetailsRate:    MetricConfig{Enabled: false},
					RabbitmqNodeMnesiaRAMTxCount:                MetricConfig{Enabled: false},
					RabbitmqNodeMnesiaRAMTxCountDetailsRate:     MetricConfig{Enabled: false},
					RabbitmqNodeMsgStoreReadCount:               MetricConfig{Enabled: false},
					RabbitmqNodeMsgStoreReadCountDetailsRate:    MetricConfig{Enabled: false},
					RabbitmqNodeMsgStoreWriteCount:              MetricConfig{Enabled: false},
					RabbitmqNodeMsgStoreWriteCountDetailsRate:   MetricConfig{Enabled: false},
					RabbitmqNodeProcTotal:                       MetricConfig{Enabled: false},
					RabbitmqNodeProcUsed:                        MetricConfig{Enabled: false},
					RabbitmqNodeProcUsedDetailsRate:             MetricConfig{Enabled: false},
					RabbitmqNodeProcessors:                      MetricConfig{Enabled: false},
					RabbitmqNodeQueueCreated:                    MetricConfig{Enabled: false},
					RabbitmqNodeQueueCreatedDetailsRate:         MetricConfig{Enabled: false},
					RabbitmqNodeQueueDeclared:                   MetricConfig{Enabled: false},
					RabbitmqNodeQueueDeclaredDetailsRate:        MetricConfig{Enabled: false},
					RabbitmqNodeQueueDeleted:                    MetricConfig{Enabled: false},
					RabbitmqNodeQueueDeletedDetailsRate:         MetricConfig{Enabled: false},
					RabbitmqNodeQueueIndexReadCount:             MetricConfig{Enabled: false},
					RabbitmqNodeQueueIndexReadCountDetailsRate:  MetricConfig{Enabled: false},
					RabbitmqNodeQueueIndexWriteCount:            MetricConfig{Enabled: false},
					RabbitmqNodeQueueIndexWriteCountDetailsRate: MetricConfig{Enabled: false},
					RabbitmqNodeRunQueue:                        MetricConfig{Enabled: false},
					RabbitmqNodeSocketsTotal:                    MetricConfig{Enabled: false},
					RabbitmqNodeSocketsUsed:                     MetricConfig{Enabled: false},
					RabbitmqNodeSocketsUsedDetailsRate:          MetricConfig{Enabled: false},
					RabbitmqNodeUptime:                          MetricConfig{Enabled: false},
				},
				ResourceAttributes: ResourceAttributesConfig{
					RabbitmqNodeName:  ResourceAttributeConfig{Enabled: false},
					RabbitmqQueueName: ResourceAttributeConfig{Enabled: false},
					RabbitmqVhostName: ResourceAttributeConfig{Enabled: false},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadMetricsBuilderConfig(t, tt.name)
			diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(MetricConfig{}, ResourceAttributeConfig{}))
			require.Emptyf(t, diff, "Config mismatch (-expected +actual):\n%s", diff)
		})
	}
}

func loadMetricsBuilderConfig(t *testing.T, name string) MetricsBuilderConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	cfg := DefaultMetricsBuilderConfig()
	require.NoError(t, sub.Unmarshal(&cfg))
	return cfg
}

func TestResourceAttributesConfig(t *testing.T) {
	tests := []struct {
		name string
		want ResourceAttributesConfig
	}{
		{
			name: "default",
			want: DefaultResourceAttributesConfig(),
		},
		{
			name: "all_set",
			want: ResourceAttributesConfig{
				RabbitmqNodeName:  ResourceAttributeConfig{Enabled: true},
				RabbitmqQueueName: ResourceAttributeConfig{Enabled: true},
				RabbitmqVhostName: ResourceAttributeConfig{Enabled: true},
			},
		},
		{
			name: "none_set",
			want: ResourceAttributesConfig{
				RabbitmqNodeName:  ResourceAttributeConfig{Enabled: false},
				RabbitmqQueueName: ResourceAttributeConfig{Enabled: false},
				RabbitmqVhostName: ResourceAttributeConfig{Enabled: false},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadResourceAttributesConfig(t, tt.name)
			diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(ResourceAttributeConfig{}))
			require.Emptyf(t, diff, "Config mismatch (-expected +actual):\n%s", diff)
		})
	}
}

func loadResourceAttributesConfig(t *testing.T, name string) ResourceAttributesConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	sub, err = sub.Sub("resource_attributes")
	require.NoError(t, err)
	cfg := DefaultResourceAttributesConfig()
	require.NoError(t, sub.Unmarshal(&cfg))
	return cfg
}
