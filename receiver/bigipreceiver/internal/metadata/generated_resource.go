// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/pdata/pcommon"
)

// ResourceBuilder is a helper struct to build resources predefined in metadata.yaml.
// The ResourceBuilder is not thread-safe and must not to be used in multiple goroutines.
type ResourceBuilder struct {
	config ResourceAttributesConfig
	res    pcommon.Resource
}

// NewResourceBuilder creates a new ResourceBuilder. This method should be called on the start of the application.
func NewResourceBuilder(rac ResourceAttributesConfig) *ResourceBuilder {
	return &ResourceBuilder{
		config: rac,
		res:    pcommon.NewResource(),
	}
}

// SetBigipNodeIPAddress sets provided value as "bigip.node.ip_address" attribute.
func (rb *ResourceBuilder) SetBigipNodeIPAddress(val string) {
	if rb.config.BigipNodeIPAddress.Enabled {
		rb.res.Attributes().PutStr("bigip.node.ip_address", val)
	}
}

// SetBigipNodeName sets provided value as "bigip.node.name" attribute.
func (rb *ResourceBuilder) SetBigipNodeName(val string) {
	if rb.config.BigipNodeName.Enabled {
		rb.res.Attributes().PutStr("bigip.node.name", val)
	}
}

// SetBigipPoolName sets provided value as "bigip.pool.name" attribute.
func (rb *ResourceBuilder) SetBigipPoolName(val string) {
	if rb.config.BigipPoolName.Enabled {
		rb.res.Attributes().PutStr("bigip.pool.name", val)
	}
}

// SetBigipPoolMemberIPAddress sets provided value as "bigip.pool_member.ip_address" attribute.
func (rb *ResourceBuilder) SetBigipPoolMemberIPAddress(val string) {
	if rb.config.BigipPoolMemberIPAddress.Enabled {
		rb.res.Attributes().PutStr("bigip.pool_member.ip_address", val)
	}
}

// SetBigipPoolMemberName sets provided value as "bigip.pool_member.name" attribute.
func (rb *ResourceBuilder) SetBigipPoolMemberName(val string) {
	if rb.config.BigipPoolMemberName.Enabled {
		rb.res.Attributes().PutStr("bigip.pool_member.name", val)
	}
}

// SetBigipVirtualServerDestination sets provided value as "bigip.virtual_server.destination" attribute.
func (rb *ResourceBuilder) SetBigipVirtualServerDestination(val string) {
	if rb.config.BigipVirtualServerDestination.Enabled {
		rb.res.Attributes().PutStr("bigip.virtual_server.destination", val)
	}
}

// SetBigipVirtualServerName sets provided value as "bigip.virtual_server.name" attribute.
func (rb *ResourceBuilder) SetBigipVirtualServerName(val string) {
	if rb.config.BigipVirtualServerName.Enabled {
		rb.res.Attributes().PutStr("bigip.virtual_server.name", val)
	}
}

// Emit returns the built resource and resets the internal builder state.
func (rb *ResourceBuilder) Emit() pcommon.Resource {
	r := rb.res
	rb.res = pcommon.NewResource()
	return r
}
