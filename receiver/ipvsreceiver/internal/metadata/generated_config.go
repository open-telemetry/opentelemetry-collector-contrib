// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for ipvs metrics.
type MetricsConfig struct {
	IpvsDestinationConnectionActiveCount   MetricConfig `mapstructure:"ipvs.destination.connection.active.count"`
	IpvsDestinationConnectionInactiveCount MetricConfig `mapstructure:"ipvs.destination.connection.inactive.count"`
	IpvsDestinationConnectionRate          MetricConfig `mapstructure:"ipvs.destination.connection.rate"`
	IpvsDestinationConnectionTotal         MetricConfig `mapstructure:"ipvs.destination.connection.total"`
	IpvsDestinationConnectionWeight        MetricConfig `mapstructure:"ipvs.destination.connection.weight"`
	IpvsDestinationInRate                  MetricConfig `mapstructure:"ipvs.destination.in.rate"`
	IpvsDestinationInTotal                 MetricConfig `mapstructure:"ipvs.destination.in.total"`
	IpvsDestinationOutRate                 MetricConfig `mapstructure:"ipvs.destination.out.rate"`
	IpvsDestinationOutTotal                MetricConfig `mapstructure:"ipvs.destination.out.total"`
	IpvsDestinationPacketInRate            MetricConfig `mapstructure:"ipvs.destination.packet.in.rate"`
	IpvsDestinationPacketInTotal           MetricConfig `mapstructure:"ipvs.destination.packet.in.total"`
	IpvsDestinationPacketOutRate           MetricConfig `mapstructure:"ipvs.destination.packet.out.rate"`
	IpvsDestinationPacketOutTotal          MetricConfig `mapstructure:"ipvs.destination.packet.out.total"`
	IpvsServiceConnectionRate              MetricConfig `mapstructure:"ipvs.service.connection.rate"`
	IpvsServiceConnectionTotal             MetricConfig `mapstructure:"ipvs.service.connection.total"`
	IpvsServiceInRate                      MetricConfig `mapstructure:"ipvs.service.in.rate"`
	IpvsServiceInTotal                     MetricConfig `mapstructure:"ipvs.service.in.total"`
	IpvsServiceOutRate                     MetricConfig `mapstructure:"ipvs.service.out.rate"`
	IpvsServiceOutTotal                    MetricConfig `mapstructure:"ipvs.service.out.total"`
	IpvsServicePacketInRate                MetricConfig `mapstructure:"ipvs.service.packet.in.rate"`
	IpvsServicePacketInTotal               MetricConfig `mapstructure:"ipvs.service.packet.in.total"`
	IpvsServicePacketOutRate               MetricConfig `mapstructure:"ipvs.service.packet.out.rate"`
	IpvsServicePacketOutTotal              MetricConfig `mapstructure:"ipvs.service.packet.out.total"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		IpvsDestinationConnectionActiveCount: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationConnectionInactiveCount: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationConnectionRate: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationConnectionTotal: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationConnectionWeight: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationInRate: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationInTotal: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationOutRate: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationOutTotal: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationPacketInRate: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationPacketInTotal: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationPacketOutRate: MetricConfig{
			Enabled: true,
		},
		IpvsDestinationPacketOutTotal: MetricConfig{
			Enabled: true,
		},
		IpvsServiceConnectionRate: MetricConfig{
			Enabled: true,
		},
		IpvsServiceConnectionTotal: MetricConfig{
			Enabled: true,
		},
		IpvsServiceInRate: MetricConfig{
			Enabled: true,
		},
		IpvsServiceInTotal: MetricConfig{
			Enabled: true,
		},
		IpvsServiceOutRate: MetricConfig{
			Enabled: true,
		},
		IpvsServiceOutTotal: MetricConfig{
			Enabled: true,
		},
		IpvsServicePacketInRate: MetricConfig{
			Enabled: true,
		},
		IpvsServicePacketInTotal: MetricConfig{
			Enabled: true,
		},
		IpvsServicePacketOutRate: MetricConfig{
			Enabled: true,
		},
		IpvsServicePacketOutTotal: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for ipvs metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
