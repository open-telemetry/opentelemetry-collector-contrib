// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/google/go-cmp/cmp/cmpopts"
	"github.com/stretchr/testify/require"

	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/confmap/confmaptest"
)

func TestMetricsBuilderConfig(t *testing.T) {
	tests := []struct {
		name string
		want MetricsBuilderConfig
	}{
		{
			name: "default",
			want: DefaultMetricsBuilderConfig(),
		},
		{
			name: "all_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					NewrelicoracledbDbID:                                         MetricConfig{Enabled: true},
					NewrelicoracledbDiskBlocksRead:                               MetricConfig{Enabled: true},
					NewrelicoracledbDiskBlocksWritten:                            MetricConfig{Enabled: true},
					NewrelicoracledbDiskReadTimeMilliseconds:                     MetricConfig{Enabled: true},
					NewrelicoracledbDiskReads:                                    MetricConfig{Enabled: true},
					NewrelicoracledbDiskWriteTimeMilliseconds:                    MetricConfig{Enabled: true},
					NewrelicoracledbDiskWrites:                                   MetricConfig{Enabled: true},
					NewrelicoracledbGlobalName:                                   MetricConfig{Enabled: true},
					NewrelicoracledbLockedAccounts:                               MetricConfig{Enabled: true},
					NewrelicoracledbLongRunningQueries:                           MetricConfig{Enabled: true},
					NewrelicoracledbMemoryPgaAllocatedBytes:                      MetricConfig{Enabled: true},
					NewrelicoracledbMemoryPgaFreeableBytes:                       MetricConfig{Enabled: true},
					NewrelicoracledbMemoryPgaInUseBytes:                          MetricConfig{Enabled: true},
					NewrelicoracledbMemoryPgaMaxSizeBytes:                        MetricConfig{Enabled: true},
					NewrelicoracledbMemorySgaSharedPoolLibraryCacheSharableBytes: MetricConfig{Enabled: true},
					NewrelicoracledbMemorySgaSharedPoolLibraryCacheUserBytes:     MetricConfig{Enabled: true},
					NewrelicoracledbMemorySgaUgaTotalBytes:                       MetricConfig{Enabled: true},
					NewrelicoracledbPdbActiveParallelSessions:                    MetricConfig{Enabled: true},
					NewrelicoracledbPdbActiveSerialSessions:                      MetricConfig{Enabled: true},
					NewrelicoracledbPdbAverageActiveSessions:                     MetricConfig{Enabled: true},
					NewrelicoracledbPdbBackgroundCPUUsagePerSecond:               MetricConfig{Enabled: true},
					NewrelicoracledbPdbBackgroundTimePerSecond:                   MetricConfig{Enabled: true},
					NewrelicoracledbPdbBlockChangesPerSecond:                     MetricConfig{Enabled: true},
					NewrelicoracledbPdbBlockChangesPerTransaction:                MetricConfig{Enabled: true},
					NewrelicoracledbPdbCPUTimeRatio:                              MetricConfig{Enabled: true},
					NewrelicoracledbPdbCPUUsagePerSecond:                         MetricConfig{Enabled: true},
					NewrelicoracledbPdbCPUUsagePerTransaction:                    MetricConfig{Enabled: true},
					NewrelicoracledbPdbCurrentLogons:                             MetricConfig{Enabled: true},
					NewrelicoracledbPdbCurrentOpenCursors:                        MetricConfig{Enabled: true},
					NewrelicoracledbPdbDbPhysicalReadBytesPerSecond:              MetricConfig{Enabled: true},
					NewrelicoracledbPdbDbPhysicalReadsPerSecond:                  MetricConfig{Enabled: true},
					NewrelicoracledbPdbDbPhysicalWriteBytesPerSecond:             MetricConfig{Enabled: true},
					NewrelicoracledbPdbDbPhysicalWritesPerSecond:                 MetricConfig{Enabled: true},
					NewrelicoracledbPdbExecuteWithoutParseRatio:                  MetricConfig{Enabled: true},
					NewrelicoracledbPdbExecutionsPerSecond:                       MetricConfig{Enabled: true},
					NewrelicoracledbPdbExecutionsPerTransaction:                  MetricConfig{Enabled: true},
					NewrelicoracledbPdbHardParseCountPerSecond:                   MetricConfig{Enabled: true},
					NewrelicoracledbPdbHardParseCountPerTransaction:              MetricConfig{Enabled: true},
					NewrelicoracledbPdbLogicalReadsPerSecond:                     MetricConfig{Enabled: true},
					NewrelicoracledbPdbLogicalReadsPerTransaction:                MetricConfig{Enabled: true},
					NewrelicoracledbPdbLogonsPerSecond:                           MetricConfig{Enabled: true},
					NewrelicoracledbPdbLogonsPerTransaction:                      MetricConfig{Enabled: true},
					NewrelicoracledbPdbNetworkTrafficBytePerSecond:               MetricConfig{Enabled: true},
					NewrelicoracledbPdbOpenCursorsPerSecond:                      MetricConfig{Enabled: true},
					NewrelicoracledbPdbOpenCursorsPerTransaction:                 MetricConfig{Enabled: true},
					NewrelicoracledbPdbParseFailureCountPerSecond:                MetricConfig{Enabled: true},
					NewrelicoracledbPdbPhysicalReadBytesPerSecond:                MetricConfig{Enabled: true},
					NewrelicoracledbPdbPhysicalReadsPerTransaction:               MetricConfig{Enabled: true},
					NewrelicoracledbPdbPhysicalWriteBytesPerSecond:               MetricConfig{Enabled: true},
					NewrelicoracledbPdbPhysicalWritesPerTransaction:              MetricConfig{Enabled: true},
					NewrelicoracledbPdbRedoGeneratedBytesPerSecond:               MetricConfig{Enabled: true},
					NewrelicoracledbPdbRedoGeneratedBytesPerTransaction:          MetricConfig{Enabled: true},
					NewrelicoracledbPdbResponseTimePerTransaction:                MetricConfig{Enabled: true},
					NewrelicoracledbPdbSessionCount:                              MetricConfig{Enabled: true},
					NewrelicoracledbPdbSoftParseRatio:                            MetricConfig{Enabled: true},
					NewrelicoracledbPdbSQLServiceResponseTime:                    MetricConfig{Enabled: true},
					NewrelicoracledbPdbTotalParseCountPerSecond:                  MetricConfig{Enabled: true},
					NewrelicoracledbPdbTotalParseCountPerTransaction:             MetricConfig{Enabled: true},
					NewrelicoracledbPdbTransactionsPerSecond:                     MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserCallsPerSecond:                        MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserCallsPerTransaction:                   MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserCommitsPerSecond:                      MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserCommitsPercentage:                     MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserRollbacksPerSecond:                    MetricConfig{Enabled: true},
					NewrelicoracledbPdbUserRollbacksPercentage:                   MetricConfig{Enabled: true},
					NewrelicoracledbPdbWaitTimeRatio:                             MetricConfig{Enabled: true},
					NewrelicoracledbRedoLogParallelWriteWaits:                    MetricConfig{Enabled: true},
					NewrelicoracledbRedoLogSwitchArchivingNeededWaits:            MetricConfig{Enabled: true},
					NewrelicoracledbRedoLogSwitchCheckpointIncompleteWaits:       MetricConfig{Enabled: true},
					NewrelicoracledbRedoLogSwitchCompletionWaits:                 MetricConfig{Enabled: true},
					NewrelicoracledbRollbackSegmentsGets:                         MetricConfig{Enabled: true},
					NewrelicoracledbRollbackSegmentsWaitRatio:                    MetricConfig{Enabled: true},
					NewrelicoracledbRollbackSegmentsWaits:                        MetricConfig{Enabled: true},
					NewrelicoracledbSessionsCount:                                MetricConfig{Enabled: true},
					NewrelicoracledbSgaBufferBusyWaits:                           MetricConfig{Enabled: true},
					NewrelicoracledbSgaFixedSizeBytes:                            MetricConfig{Enabled: true},
					NewrelicoracledbSgaFreeBufferInspectedWaits:                  MetricConfig{Enabled: true},
					NewrelicoracledbSgaFreeBufferWaits:                           MetricConfig{Enabled: true},
					NewrelicoracledbSgaHitRatio:                                  MetricConfig{Enabled: true},
					NewrelicoracledbSgaLogAllocationRetriesRatio:                 MetricConfig{Enabled: true},
					NewrelicoracledbSgaLogBufferRedoAllocationRetries:            MetricConfig{Enabled: true},
					NewrelicoracledbSgaLogBufferRedoEntries:                      MetricConfig{Enabled: true},
					NewrelicoracledbSgaLogBufferSpaceWaits:                       MetricConfig{Enabled: true},
					NewrelicoracledbSgaRedoBuffersBytes:                          MetricConfig{Enabled: true},
					NewrelicoracledbSgaSharedPoolDictCacheMissRatio:              MetricConfig{Enabled: true},
					NewrelicoracledbSgaSharedPoolLibraryCacheHitRatio:            MetricConfig{Enabled: true},
					NewrelicoracledbSgaSharedPoolLibraryCacheReloadRatio:         MetricConfig{Enabled: true},
					NewrelicoracledbSortsDisk:                                    MetricConfig{Enabled: true},
					NewrelicoracledbSortsMemory:                                  MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceDbID:                               MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceGlobalName:                         MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceIsOffline:                          MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceOfflineCdbDatafiles:                MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceOfflinePdbDatafiles:                MetricConfig{Enabled: true},
					NewrelicoracledbTablespacePdbNonWriteMode:                    MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceSpaceConsumedBytes:                 MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceSpaceReservedBytes:                 MetricConfig{Enabled: true},
					NewrelicoracledbTablespaceSpaceUsedPercentage:                MetricConfig{Enabled: true},
				},
				ResourceAttributes: ResourceAttributesConfig{
					HostName:                     ResourceAttributeConfig{Enabled: true},
					NewrelicoracledbInstanceName: ResourceAttributeConfig{Enabled: true},
				},
			},
		},
		{
			name: "none_set",
			want: MetricsBuilderConfig{
				Metrics: MetricsConfig{
					NewrelicoracledbDbID:                                         MetricConfig{Enabled: false},
					NewrelicoracledbDiskBlocksRead:                               MetricConfig{Enabled: false},
					NewrelicoracledbDiskBlocksWritten:                            MetricConfig{Enabled: false},
					NewrelicoracledbDiskReadTimeMilliseconds:                     MetricConfig{Enabled: false},
					NewrelicoracledbDiskReads:                                    MetricConfig{Enabled: false},
					NewrelicoracledbDiskWriteTimeMilliseconds:                    MetricConfig{Enabled: false},
					NewrelicoracledbDiskWrites:                                   MetricConfig{Enabled: false},
					NewrelicoracledbGlobalName:                                   MetricConfig{Enabled: false},
					NewrelicoracledbLockedAccounts:                               MetricConfig{Enabled: false},
					NewrelicoracledbLongRunningQueries:                           MetricConfig{Enabled: false},
					NewrelicoracledbMemoryPgaAllocatedBytes:                      MetricConfig{Enabled: false},
					NewrelicoracledbMemoryPgaFreeableBytes:                       MetricConfig{Enabled: false},
					NewrelicoracledbMemoryPgaInUseBytes:                          MetricConfig{Enabled: false},
					NewrelicoracledbMemoryPgaMaxSizeBytes:                        MetricConfig{Enabled: false},
					NewrelicoracledbMemorySgaSharedPoolLibraryCacheSharableBytes: MetricConfig{Enabled: false},
					NewrelicoracledbMemorySgaSharedPoolLibraryCacheUserBytes:     MetricConfig{Enabled: false},
					NewrelicoracledbMemorySgaUgaTotalBytes:                       MetricConfig{Enabled: false},
					NewrelicoracledbPdbActiveParallelSessions:                    MetricConfig{Enabled: false},
					NewrelicoracledbPdbActiveSerialSessions:                      MetricConfig{Enabled: false},
					NewrelicoracledbPdbAverageActiveSessions:                     MetricConfig{Enabled: false},
					NewrelicoracledbPdbBackgroundCPUUsagePerSecond:               MetricConfig{Enabled: false},
					NewrelicoracledbPdbBackgroundTimePerSecond:                   MetricConfig{Enabled: false},
					NewrelicoracledbPdbBlockChangesPerSecond:                     MetricConfig{Enabled: false},
					NewrelicoracledbPdbBlockChangesPerTransaction:                MetricConfig{Enabled: false},
					NewrelicoracledbPdbCPUTimeRatio:                              MetricConfig{Enabled: false},
					NewrelicoracledbPdbCPUUsagePerSecond:                         MetricConfig{Enabled: false},
					NewrelicoracledbPdbCPUUsagePerTransaction:                    MetricConfig{Enabled: false},
					NewrelicoracledbPdbCurrentLogons:                             MetricConfig{Enabled: false},
					NewrelicoracledbPdbCurrentOpenCursors:                        MetricConfig{Enabled: false},
					NewrelicoracledbPdbDbPhysicalReadBytesPerSecond:              MetricConfig{Enabled: false},
					NewrelicoracledbPdbDbPhysicalReadsPerSecond:                  MetricConfig{Enabled: false},
					NewrelicoracledbPdbDbPhysicalWriteBytesPerSecond:             MetricConfig{Enabled: false},
					NewrelicoracledbPdbDbPhysicalWritesPerSecond:                 MetricConfig{Enabled: false},
					NewrelicoracledbPdbExecuteWithoutParseRatio:                  MetricConfig{Enabled: false},
					NewrelicoracledbPdbExecutionsPerSecond:                       MetricConfig{Enabled: false},
					NewrelicoracledbPdbExecutionsPerTransaction:                  MetricConfig{Enabled: false},
					NewrelicoracledbPdbHardParseCountPerSecond:                   MetricConfig{Enabled: false},
					NewrelicoracledbPdbHardParseCountPerTransaction:              MetricConfig{Enabled: false},
					NewrelicoracledbPdbLogicalReadsPerSecond:                     MetricConfig{Enabled: false},
					NewrelicoracledbPdbLogicalReadsPerTransaction:                MetricConfig{Enabled: false},
					NewrelicoracledbPdbLogonsPerSecond:                           MetricConfig{Enabled: false},
					NewrelicoracledbPdbLogonsPerTransaction:                      MetricConfig{Enabled: false},
					NewrelicoracledbPdbNetworkTrafficBytePerSecond:               MetricConfig{Enabled: false},
					NewrelicoracledbPdbOpenCursorsPerSecond:                      MetricConfig{Enabled: false},
					NewrelicoracledbPdbOpenCursorsPerTransaction:                 MetricConfig{Enabled: false},
					NewrelicoracledbPdbParseFailureCountPerSecond:                MetricConfig{Enabled: false},
					NewrelicoracledbPdbPhysicalReadBytesPerSecond:                MetricConfig{Enabled: false},
					NewrelicoracledbPdbPhysicalReadsPerTransaction:               MetricConfig{Enabled: false},
					NewrelicoracledbPdbPhysicalWriteBytesPerSecond:               MetricConfig{Enabled: false},
					NewrelicoracledbPdbPhysicalWritesPerTransaction:              MetricConfig{Enabled: false},
					NewrelicoracledbPdbRedoGeneratedBytesPerSecond:               MetricConfig{Enabled: false},
					NewrelicoracledbPdbRedoGeneratedBytesPerTransaction:          MetricConfig{Enabled: false},
					NewrelicoracledbPdbResponseTimePerTransaction:                MetricConfig{Enabled: false},
					NewrelicoracledbPdbSessionCount:                              MetricConfig{Enabled: false},
					NewrelicoracledbPdbSoftParseRatio:                            MetricConfig{Enabled: false},
					NewrelicoracledbPdbSQLServiceResponseTime:                    MetricConfig{Enabled: false},
					NewrelicoracledbPdbTotalParseCountPerSecond:                  MetricConfig{Enabled: false},
					NewrelicoracledbPdbTotalParseCountPerTransaction:             MetricConfig{Enabled: false},
					NewrelicoracledbPdbTransactionsPerSecond:                     MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserCallsPerSecond:                        MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserCallsPerTransaction:                   MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserCommitsPerSecond:                      MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserCommitsPercentage:                     MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserRollbacksPerSecond:                    MetricConfig{Enabled: false},
					NewrelicoracledbPdbUserRollbacksPercentage:                   MetricConfig{Enabled: false},
					NewrelicoracledbPdbWaitTimeRatio:                             MetricConfig{Enabled: false},
					NewrelicoracledbRedoLogParallelWriteWaits:                    MetricConfig{Enabled: false},
					NewrelicoracledbRedoLogSwitchArchivingNeededWaits:            MetricConfig{Enabled: false},
					NewrelicoracledbRedoLogSwitchCheckpointIncompleteWaits:       MetricConfig{Enabled: false},
					NewrelicoracledbRedoLogSwitchCompletionWaits:                 MetricConfig{Enabled: false},
					NewrelicoracledbRollbackSegmentsGets:                         MetricConfig{Enabled: false},
					NewrelicoracledbRollbackSegmentsWaitRatio:                    MetricConfig{Enabled: false},
					NewrelicoracledbRollbackSegmentsWaits:                        MetricConfig{Enabled: false},
					NewrelicoracledbSessionsCount:                                MetricConfig{Enabled: false},
					NewrelicoracledbSgaBufferBusyWaits:                           MetricConfig{Enabled: false},
					NewrelicoracledbSgaFixedSizeBytes:                            MetricConfig{Enabled: false},
					NewrelicoracledbSgaFreeBufferInspectedWaits:                  MetricConfig{Enabled: false},
					NewrelicoracledbSgaFreeBufferWaits:                           MetricConfig{Enabled: false},
					NewrelicoracledbSgaHitRatio:                                  MetricConfig{Enabled: false},
					NewrelicoracledbSgaLogAllocationRetriesRatio:                 MetricConfig{Enabled: false},
					NewrelicoracledbSgaLogBufferRedoAllocationRetries:            MetricConfig{Enabled: false},
					NewrelicoracledbSgaLogBufferRedoEntries:                      MetricConfig{Enabled: false},
					NewrelicoracledbSgaLogBufferSpaceWaits:                       MetricConfig{Enabled: false},
					NewrelicoracledbSgaRedoBuffersBytes:                          MetricConfig{Enabled: false},
					NewrelicoracledbSgaSharedPoolDictCacheMissRatio:              MetricConfig{Enabled: false},
					NewrelicoracledbSgaSharedPoolLibraryCacheHitRatio:            MetricConfig{Enabled: false},
					NewrelicoracledbSgaSharedPoolLibraryCacheReloadRatio:         MetricConfig{Enabled: false},
					NewrelicoracledbSortsDisk:                                    MetricConfig{Enabled: false},
					NewrelicoracledbSortsMemory:                                  MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceDbID:                               MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceGlobalName:                         MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceIsOffline:                          MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceOfflineCdbDatafiles:                MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceOfflinePdbDatafiles:                MetricConfig{Enabled: false},
					NewrelicoracledbTablespacePdbNonWriteMode:                    MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceSpaceConsumedBytes:                 MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceSpaceReservedBytes:                 MetricConfig{Enabled: false},
					NewrelicoracledbTablespaceSpaceUsedPercentage:                MetricConfig{Enabled: false},
				},
				ResourceAttributes: ResourceAttributesConfig{
					HostName:                     ResourceAttributeConfig{Enabled: false},
					NewrelicoracledbInstanceName: ResourceAttributeConfig{Enabled: false},
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadMetricsBuilderConfig(t, tt.name)
			diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(MetricConfig{}, ResourceAttributeConfig{}))
			require.Emptyf(t, diff, "Config mismatch (-expected +actual):\n%s", diff)
		})
	}
}

func loadMetricsBuilderConfig(t *testing.T, name string) MetricsBuilderConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	cfg := DefaultMetricsBuilderConfig()
	require.NoError(t, sub.Unmarshal(&cfg, confmap.WithIgnoreUnused()))
	return cfg
}

func TestResourceAttributesConfig(t *testing.T) {
	tests := []struct {
		name string
		want ResourceAttributesConfig
	}{
		{
			name: "default",
			want: DefaultResourceAttributesConfig(),
		},
		{
			name: "all_set",
			want: ResourceAttributesConfig{
				HostName:                     ResourceAttributeConfig{Enabled: true},
				NewrelicoracledbInstanceName: ResourceAttributeConfig{Enabled: true},
			},
		},
		{
			name: "none_set",
			want: ResourceAttributesConfig{
				HostName:                     ResourceAttributeConfig{Enabled: false},
				NewrelicoracledbInstanceName: ResourceAttributeConfig{Enabled: false},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			cfg := loadResourceAttributesConfig(t, tt.name)
			diff := cmp.Diff(tt.want, cfg, cmpopts.IgnoreUnexported(ResourceAttributeConfig{}))
			require.Emptyf(t, diff, "Config mismatch (-expected +actual):\n%s", diff)
		})
	}
}

func loadResourceAttributesConfig(t *testing.T, name string) ResourceAttributesConfig {
	cm, err := confmaptest.LoadConf(filepath.Join("testdata", "config.yaml"))
	require.NoError(t, err)
	sub, err := cm.Sub(name)
	require.NoError(t, err)
	sub, err = sub.Sub("resource_attributes")
	require.NoError(t, err)
	cfg := DefaultResourceAttributesConfig()
	require.NoError(t, sub.Unmarshal(&cfg))
	return cfg
}
